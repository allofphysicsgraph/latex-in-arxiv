# Generated from HTMLLexer.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,23,377,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,
        7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,
        11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,
        17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,
        24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,
        30,2,31,7,31,2,32,7,32,1,0,1,0,1,0,1,0,1,0,1,0,5,0,78,8,0,10,0,12,
        0,81,9,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,5,1,92,8,1,10,1,12,
        1,95,9,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,5,2,107,8,2,10,
        2,12,2,110,9,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,5,3,125,8,3,10,3,12,3,128,9,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
        5,4,138,8,4,10,4,12,4,141,9,4,1,4,1,4,1,5,1,5,1,5,1,5,5,5,149,8,
        5,10,5,12,5,152,9,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,160,8,5,10,5,12,
        5,163,9,5,1,5,1,5,3,5,167,8,5,1,6,1,6,3,6,171,8,6,1,6,4,6,174,8,
        6,11,6,12,6,175,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,5,7,187,8,7,
        10,7,12,7,190,9,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,5,8,204,8,8,10,8,12,8,207,9,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,10,4,10,218,8,10,11,10,12,10,219,1,11,1,11,1,11,1,11,1,12,1,12,
        1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,5,15,239,
        8,15,10,15,12,15,242,9,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,
        1,19,1,19,3,19,254,8,19,1,20,3,20,257,8,20,1,21,5,21,260,8,21,10,
        21,12,21,263,9,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,22,5,22,278,8,22,10,22,12,22,281,9,22,1,22,1,22,1,
        22,1,22,1,22,1,22,1,23,5,23,290,8,23,10,23,12,23,293,9,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,5,24,307,8,
        24,10,24,12,24,310,9,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,5,25,
        319,8,25,10,25,12,25,322,9,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,
        1,26,1,26,3,26,333,8,26,1,27,3,27,336,8,27,1,28,4,28,339,8,28,11,
        28,12,28,340,1,28,3,28,344,8,28,1,29,1,29,4,29,348,8,29,11,29,12,
        29,349,1,30,4,30,353,8,30,11,30,12,30,354,1,30,3,30,358,8,30,1,31,
        1,31,5,31,362,8,31,10,31,12,31,365,9,31,1,31,1,31,1,32,1,32,5,32,
        371,8,32,10,32,12,32,374,9,32,1,32,1,32,13,79,93,108,126,139,150,
        161,188,205,261,279,291,308,0,33,5,1,7,2,9,3,11,4,13,5,15,6,17,7,
        19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,0,41,
        0,43,0,45,0,47,18,49,19,51,20,53,21,55,22,57,23,59,0,61,0,63,0,65,
        0,67,0,69,0,5,0,1,2,3,4,12,2,0,9,9,32,32,1,0,60,60,3,0,9,10,13,13,
        32,32,3,0,48,57,65,70,97,102,1,0,48,57,2,0,45,46,95,95,3,0,183,183,
        768,879,8255,8256,8,0,58,58,65,90,97,122,8304,8591,11264,12271,12289,
        55295,63744,64975,65008,65533,1,0,32,32,7,0,35,35,43,59,61,61,63,
        63,65,90,95,95,97,122,2,0,34,34,60,60,2,0,39,39,60,60,396,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,1,27,1,0,0,0,1,29,1,0,0,0,1,31,1,0,0,0,1,33,1,0,0,0,1,35,1,0,
        0,0,1,37,1,0,0,0,2,47,1,0,0,0,2,49,1,0,0,0,3,51,1,0,0,0,3,53,1,0,
        0,0,4,55,1,0,0,0,4,57,1,0,0,0,5,71,1,0,0,0,7,86,1,0,0,0,9,99,1,0,
        0,0,11,113,1,0,0,0,13,133,1,0,0,0,15,166,1,0,0,0,17,173,1,0,0,0,
        19,177,1,0,0,0,21,195,1,0,0,0,23,212,1,0,0,0,25,217,1,0,0,0,27,221,
        1,0,0,0,29,225,1,0,0,0,31,230,1,0,0,0,33,232,1,0,0,0,35,236,1,0,
        0,0,37,243,1,0,0,0,39,245,1,0,0,0,41,247,1,0,0,0,43,253,1,0,0,0,
        45,256,1,0,0,0,47,261,1,0,0,0,49,279,1,0,0,0,51,291,1,0,0,0,53,308,
        1,0,0,0,55,320,1,0,0,0,57,332,1,0,0,0,59,335,1,0,0,0,61,338,1,0,
        0,0,63,345,1,0,0,0,65,352,1,0,0,0,67,359,1,0,0,0,69,368,1,0,0,0,
        71,72,5,60,0,0,72,73,5,33,0,0,73,74,5,45,0,0,74,75,5,45,0,0,75,79,
        1,0,0,0,76,78,9,0,0,0,77,76,1,0,0,0,78,81,1,0,0,0,79,80,1,0,0,0,
        79,77,1,0,0,0,80,82,1,0,0,0,81,79,1,0,0,0,82,83,5,45,0,0,83,84,5,
        45,0,0,84,85,5,62,0,0,85,6,1,0,0,0,86,87,5,60,0,0,87,88,5,33,0,0,
        88,89,5,91,0,0,89,93,1,0,0,0,90,92,9,0,0,0,91,90,1,0,0,0,92,95,1,
        0,0,0,93,94,1,0,0,0,93,91,1,0,0,0,94,96,1,0,0,0,95,93,1,0,0,0,96,
        97,5,93,0,0,97,98,5,62,0,0,98,8,1,0,0,0,99,100,5,60,0,0,100,101,
        5,63,0,0,101,102,5,120,0,0,102,103,5,109,0,0,103,104,5,108,0,0,104,
        108,1,0,0,0,105,107,9,0,0,0,106,105,1,0,0,0,107,110,1,0,0,0,108,
        109,1,0,0,0,108,106,1,0,0,0,109,111,1,0,0,0,110,108,1,0,0,0,111,
        112,5,62,0,0,112,10,1,0,0,0,113,114,5,60,0,0,114,115,5,33,0,0,115,
        116,5,91,0,0,116,117,5,67,0,0,117,118,5,68,0,0,118,119,5,65,0,0,
        119,120,5,84,0,0,120,121,5,65,0,0,121,122,5,91,0,0,122,126,1,0,0,
        0,123,125,9,0,0,0,124,123,1,0,0,0,125,128,1,0,0,0,126,127,1,0,0,
        0,126,124,1,0,0,0,127,129,1,0,0,0,128,126,1,0,0,0,129,130,5,93,0,
        0,130,131,5,93,0,0,131,132,5,62,0,0,132,12,1,0,0,0,133,134,5,60,
        0,0,134,135,5,33,0,0,135,139,1,0,0,0,136,138,9,0,0,0,137,136,1,0,
        0,0,138,141,1,0,0,0,139,140,1,0,0,0,139,137,1,0,0,0,140,142,1,0,
        0,0,141,139,1,0,0,0,142,143,5,62,0,0,143,14,1,0,0,0,144,145,5,60,
        0,0,145,146,5,63,0,0,146,150,1,0,0,0,147,149,9,0,0,0,148,147,1,0,
        0,0,149,152,1,0,0,0,150,151,1,0,0,0,150,148,1,0,0,0,151,153,1,0,
        0,0,152,150,1,0,0,0,153,154,5,63,0,0,154,167,5,62,0,0,155,156,5,
        60,0,0,156,157,5,37,0,0,157,161,1,0,0,0,158,160,9,0,0,0,159,158,
        1,0,0,0,160,163,1,0,0,0,161,162,1,0,0,0,161,159,1,0,0,0,162,164,
        1,0,0,0,163,161,1,0,0,0,164,165,5,37,0,0,165,167,5,62,0,0,166,144,
        1,0,0,0,166,155,1,0,0,0,167,16,1,0,0,0,168,174,7,0,0,0,169,171,5,
        13,0,0,170,169,1,0,0,0,170,171,1,0,0,0,171,172,1,0,0,0,172,174,5,
        10,0,0,173,168,1,0,0,0,173,170,1,0,0,0,174,175,1,0,0,0,175,173,1,
        0,0,0,175,176,1,0,0,0,176,18,1,0,0,0,177,178,5,60,0,0,178,179,5,
        115,0,0,179,180,5,99,0,0,180,181,5,114,0,0,181,182,5,105,0,0,182,
        183,5,112,0,0,183,184,5,116,0,0,184,188,1,0,0,0,185,187,9,0,0,0,
        186,185,1,0,0,0,187,190,1,0,0,0,188,189,1,0,0,0,188,186,1,0,0,0,
        189,191,1,0,0,0,190,188,1,0,0,0,191,192,5,62,0,0,192,193,1,0,0,0,
        193,194,6,7,0,0,194,20,1,0,0,0,195,196,5,60,0,0,196,197,5,115,0,
        0,197,198,5,116,0,0,198,199,5,121,0,0,199,200,5,108,0,0,200,201,
        5,101,0,0,201,205,1,0,0,0,202,204,9,0,0,0,203,202,1,0,0,0,204,207,
        1,0,0,0,205,206,1,0,0,0,205,203,1,0,0,0,206,208,1,0,0,0,207,205,
        1,0,0,0,208,209,5,62,0,0,209,210,1,0,0,0,210,211,6,8,1,0,211,22,
        1,0,0,0,212,213,5,60,0,0,213,214,1,0,0,0,214,215,6,9,2,0,215,24,
        1,0,0,0,216,218,8,1,0,0,217,216,1,0,0,0,218,219,1,0,0,0,219,217,
        1,0,0,0,219,220,1,0,0,0,220,26,1,0,0,0,221,222,5,62,0,0,222,223,
        1,0,0,0,223,224,6,11,3,0,224,28,1,0,0,0,225,226,5,47,0,0,226,227,
        5,62,0,0,227,228,1,0,0,0,228,229,6,12,3,0,229,30,1,0,0,0,230,231,
        5,47,0,0,231,32,1,0,0,0,232,233,5,61,0,0,233,234,1,0,0,0,234,235,
        6,14,4,0,235,34,1,0,0,0,236,240,3,45,20,0,237,239,3,43,19,0,238,
        237,1,0,0,0,239,242,1,0,0,0,240,238,1,0,0,0,240,241,1,0,0,0,241,
        36,1,0,0,0,242,240,1,0,0,0,243,244,7,2,0,0,244,38,1,0,0,0,245,246,
        7,3,0,0,246,40,1,0,0,0,247,248,7,4,0,0,248,42,1,0,0,0,249,254,3,
        45,20,0,250,254,7,5,0,0,251,254,3,41,18,0,252,254,7,6,0,0,253,249,
        1,0,0,0,253,250,1,0,0,0,253,251,1,0,0,0,253,252,1,0,0,0,254,44,1,
        0,0,0,255,257,7,7,0,0,256,255,1,0,0,0,257,46,1,0,0,0,258,260,9,0,
        0,0,259,258,1,0,0,0,260,263,1,0,0,0,261,262,1,0,0,0,261,259,1,0,
        0,0,262,264,1,0,0,0,263,261,1,0,0,0,264,265,5,60,0,0,265,266,5,47,
        0,0,266,267,5,115,0,0,267,268,5,99,0,0,268,269,5,114,0,0,269,270,
        5,105,0,0,270,271,5,112,0,0,271,272,5,116,0,0,272,273,5,62,0,0,273,
        274,1,0,0,0,274,275,6,21,3,0,275,48,1,0,0,0,276,278,9,0,0,0,277,
        276,1,0,0,0,278,281,1,0,0,0,279,280,1,0,0,0,279,277,1,0,0,0,280,
        282,1,0,0,0,281,279,1,0,0,0,282,283,5,60,0,0,283,284,5,47,0,0,284,
        285,5,62,0,0,285,286,1,0,0,0,286,287,6,22,3,0,287,50,1,0,0,0,288,
        290,9,0,0,0,289,288,1,0,0,0,290,293,1,0,0,0,291,292,1,0,0,0,291,
        289,1,0,0,0,292,294,1,0,0,0,293,291,1,0,0,0,294,295,5,60,0,0,295,
        296,5,47,0,0,296,297,5,115,0,0,297,298,5,116,0,0,298,299,5,121,0,
        0,299,300,5,108,0,0,300,301,5,101,0,0,301,302,5,62,0,0,302,303,1,
        0,0,0,303,304,6,23,3,0,304,52,1,0,0,0,305,307,9,0,0,0,306,305,1,
        0,0,0,307,310,1,0,0,0,308,309,1,0,0,0,308,306,1,0,0,0,309,311,1,
        0,0,0,310,308,1,0,0,0,311,312,5,60,0,0,312,313,5,47,0,0,313,314,
        5,62,0,0,314,315,1,0,0,0,315,316,6,24,3,0,316,54,1,0,0,0,317,319,
        7,8,0,0,318,317,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,
        1,0,0,0,321,323,1,0,0,0,322,320,1,0,0,0,323,324,3,57,26,0,324,325,
        1,0,0,0,325,326,6,25,3,0,326,56,1,0,0,0,327,333,3,67,31,0,328,333,
        3,69,32,0,329,333,3,61,28,0,330,333,3,63,29,0,331,333,3,65,30,0,
        332,327,1,0,0,0,332,328,1,0,0,0,332,329,1,0,0,0,332,330,1,0,0,0,
        332,331,1,0,0,0,333,58,1,0,0,0,334,336,7,9,0,0,335,334,1,0,0,0,336,
        60,1,0,0,0,337,339,3,59,27,0,338,337,1,0,0,0,339,340,1,0,0,0,340,
        338,1,0,0,0,340,341,1,0,0,0,341,343,1,0,0,0,342,344,5,32,0,0,343,
        342,1,0,0,0,343,344,1,0,0,0,344,62,1,0,0,0,345,347,5,35,0,0,346,
        348,7,3,0,0,347,346,1,0,0,0,348,349,1,0,0,0,349,347,1,0,0,0,349,
        350,1,0,0,0,350,64,1,0,0,0,351,353,7,4,0,0,352,351,1,0,0,0,353,354,
        1,0,0,0,354,352,1,0,0,0,354,355,1,0,0,0,355,357,1,0,0,0,356,358,
        5,37,0,0,357,356,1,0,0,0,357,358,1,0,0,0,358,66,1,0,0,0,359,363,
        5,34,0,0,360,362,8,10,0,0,361,360,1,0,0,0,362,365,1,0,0,0,363,361,
        1,0,0,0,363,364,1,0,0,0,364,366,1,0,0,0,365,363,1,0,0,0,366,367,
        5,34,0,0,367,68,1,0,0,0,368,372,5,39,0,0,369,371,8,11,0,0,370,369,
        1,0,0,0,371,374,1,0,0,0,372,370,1,0,0,0,372,373,1,0,0,0,373,375,
        1,0,0,0,374,372,1,0,0,0,375,376,5,39,0,0,376,70,1,0,0,0,36,0,1,2,
        3,4,79,93,108,126,139,150,161,166,170,173,175,188,205,219,240,253,
        256,261,279,291,308,320,332,335,340,343,349,354,357,363,372,5,5,
        2,0,5,3,0,5,1,0,4,0,0,5,4,0
    ]

class HTMLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    TAG = 1
    SCRIPT = 2
    STYLE = 3
    ATTVALUE = 4

    HTML_COMMENT = 1
    HTML_CONDITIONAL_COMMENT = 2
    XML_DECLARATION = 3
    CDATA = 4
    DTD = 5
    SCRIPTLET = 6
    SEA_WS = 7
    SCRIPT_OPEN = 8
    STYLE_OPEN = 9
    TAG_OPEN = 10
    HTML_TEXT = 11
    TAG_CLOSE = 12
    TAG_SLASH_CLOSE = 13
    TAG_SLASH = 14
    TAG_EQUALS = 15
    TAG_NAME = 16
    TAG_WHITESPACE = 17
    SCRIPT_BODY = 18
    SCRIPT_SHORT_BODY = 19
    STYLE_BODY = 20
    STYLE_SHORT_BODY = 21
    ATTVALUE_VALUE = 22
    ATTRIBUTE = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "TAG", "SCRIPT", "STYLE", "ATTVALUE" ]

    literalNames = [ "<INVALID>",
            "'<'", "'>'", "'/>'", "'/'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "HTML_COMMENT", "HTML_CONDITIONAL_COMMENT", "XML_DECLARATION", 
            "CDATA", "DTD", "SCRIPTLET", "SEA_WS", "SCRIPT_OPEN", "STYLE_OPEN", 
            "TAG_OPEN", "HTML_TEXT", "TAG_CLOSE", "TAG_SLASH_CLOSE", "TAG_SLASH", 
            "TAG_EQUALS", "TAG_NAME", "TAG_WHITESPACE", "SCRIPT_BODY", "SCRIPT_SHORT_BODY", 
            "STYLE_BODY", "STYLE_SHORT_BODY", "ATTVALUE_VALUE", "ATTRIBUTE" ]

    ruleNames = [ "HTML_COMMENT", "HTML_CONDITIONAL_COMMENT", "XML_DECLARATION", 
                  "CDATA", "DTD", "SCRIPTLET", "SEA_WS", "SCRIPT_OPEN", 
                  "STYLE_OPEN", "TAG_OPEN", "HTML_TEXT", "TAG_CLOSE", "TAG_SLASH_CLOSE", 
                  "TAG_SLASH", "TAG_EQUALS", "TAG_NAME", "TAG_WHITESPACE", 
                  "HEXDIGIT", "DIGIT", "TAG_NameChar", "TAG_NameStartChar", 
                  "SCRIPT_BODY", "SCRIPT_SHORT_BODY", "STYLE_BODY", "STYLE_SHORT_BODY", 
                  "ATTVALUE_VALUE", "ATTRIBUTE", "ATTCHAR", "ATTCHARS", 
                  "HEXCHARS", "DECCHARS", "DOUBLE_QUOTE_STRING", "SINGLE_QUOTE_STRING" ]

    grammarFileName = "HTMLLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


