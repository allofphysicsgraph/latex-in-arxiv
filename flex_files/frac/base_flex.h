
/* A lexical scanner generated by flex */

/* Target: C/C++ */
/* START of m4 controls */
/* M4_YY_TABLES_VERIFY = 0 */
/* YY_MAIN = 0 */
/* M4_MODE_NO_DO_STDINIT */
/* M4_MODE_NO_YYTEXT_IS_ARRAY */
/* M4_MODE_NO_YYMORE_USED */
/* M4_MODE_REAL_FULLSPD */
/* M4_MODE_NO_REAL_FULLTBL */
/* M4_MODE_NO_CPP_USE_READ */
/* M4_MODE_NO_VARIABLE_TRAILING_CONTEXT_RULES */
/* M4_MODE_FIND_ACTION_REJECT_REALLY_USED */
/* M4_MODE_NO_USES_REJECT */
/* M4_MODE_FULLSPD */
/* M4_MODE_NO_BOL_NEEDED */
/* M4_MODE_NO_USEECS */
/* M4_MODE_GENTABLES */
/* M4_MODE_NO_INTERACTIVE */
/* M4_MODE_NO_YYWRAP */
/* M4_MODE_C_ONLY */
/* M4_MODE_PREFIX = S1_ */
/* M4_MODE_NO_YYINPUT */
/* M4_YY_NO_TOP_STATE */
/* M4_YY_NO_YYUNPUT */
/* M4_YY_STACK_USED */
/* M4_MODE_NO_REWRITE */
/* END of m4 controls */

#ifndef S1_HEADER_H
#define S1_HEADER_H
#define S1_IN_HEADER 1

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

#ifdef yy_create_buffer
#define S1__create_buffer_ALREADY_DEFINED
#else
#define yy_create_buffer S1__create_buffer
#endif

#ifdef yy_delete_buffer
#define S1__delete_buffer_ALREADY_DEFINED
#else
#define yy_delete_buffer S1__delete_buffer
#endif

#ifdef yy_scan_buffer
#define S1__scan_buffer_ALREADY_DEFINED
#else
#define yy_scan_buffer S1__scan_buffer
#endif

#ifdef yy_scan_string
#define S1__scan_string_ALREADY_DEFINED
#else
#define yy_scan_string S1__scan_string
#endif

#ifdef yy_scan_bytes
#define S1__scan_bytes_ALREADY_DEFINED
#else
#define yy_scan_bytes S1__scan_bytes
#endif

#ifdef yy_init_buffer
#define S1__init_buffer_ALREADY_DEFINED
#else
#define yy_init_buffer S1__init_buffer
#endif

#ifdef yy_flush_buffer
#define S1__flush_buffer_ALREADY_DEFINED
#else
#define yy_flush_buffer S1__flush_buffer
#endif

#ifdef yy_load_buffer_state
#define S1__load_buffer_state_ALREADY_DEFINED
#else
#define yy_load_buffer_state S1__load_buffer_state
#endif

#ifdef yy_switch_to_buffer
#define S1__switch_to_buffer_ALREADY_DEFINED
#else
#define yy_switch_to_buffer S1__switch_to_buffer
#endif

#ifdef yypush_buffer_state
#define S1_push_buffer_state_ALREADY_DEFINED
#else
#define yypush_buffer_state S1_push_buffer_state
#endif

#ifdef yypop_buffer_state
#define S1_pop_buffer_state_ALREADY_DEFINED
#else
#define yypop_buffer_state S1_pop_buffer_state
#endif

#ifdef yyensure_buffer_stack
#define S1_ensure_buffer_stack_ALREADY_DEFINED
#else
#define yyensure_buffer_stack S1_ensure_buffer_stack
#endif

#ifdef yylex
#define S1_lex_ALREADY_DEFINED
#else
#define yylex S1_lex
#endif

#ifdef yyrestart
#define S1_restart_ALREADY_DEFINED
#else
#define yyrestart S1_restart
#endif

#ifdef yylex_init
#define S1_lex_init_ALREADY_DEFINED
#else
#define yylex_init S1_lex_init
#endif

#ifdef yylex_init_extra
#define S1_lex_init_extra_ALREADY_DEFINED
#else
#define yylex_init_extra S1_lex_init_extra
#endif

#ifdef yylex_destroy
#define S1_lex_destroy_ALREADY_DEFINED
#else
#define yylex_destroy S1_lex_destroy
#endif

#ifdef yyget_debug
#define S1_get_debug_ALREADY_DEFINED
#else
#define yyget_debug S1_get_debug
#endif

#ifdef yyset_debug
#define S1_set_debug_ALREADY_DEFINED
#else
#define yyset_debug S1_set_debug
#endif

#ifdef yyget_extra
#define S1_get_extra_ALREADY_DEFINED
#else
#define yyget_extra S1_get_extra
#endif

#ifdef yyset_extra
#define S1_set_extra_ALREADY_DEFINED
#else
#define yyset_extra S1_set_extra
#endif

#ifdef yyget_in
#define S1_get_in_ALREADY_DEFINED
#else
#define yyget_in S1_get_in
#endif

#ifdef yyset_in
#define S1_set_in_ALREADY_DEFINED
#else
#define yyset_in S1_set_in
#endif

#ifdef yyget_out
#define S1_get_out_ALREADY_DEFINED
#else
#define yyget_out S1_get_out
#endif

#ifdef yyset_out
#define S1_set_out_ALREADY_DEFINED
#else
#define yyset_out S1_set_out
#endif

#ifdef yyget_leng
#define S1_get_leng_ALREADY_DEFINED
#else
#define yyget_leng S1_get_leng
#endif

#ifdef yyget_text
#define S1_get_text_ALREADY_DEFINED
#else
#define yyget_text S1_get_text
#endif

#ifdef yyget_lineno
#define S1_get_lineno_ALREADY_DEFINED
#else
#define yyget_lineno S1_get_lineno
#endif

#ifdef yyset_lineno
#define S1_set_lineno_ALREADY_DEFINED
#else
#define yyset_lineno S1_set_lineno
#endif

#ifdef yywrap
#define S1_wrap_ALREADY_DEFINED
#else
#define yywrap S1_wrap
#endif

#ifdef yyalloc
#define S1_alloc_ALREADY_DEFINED
#else
#define yyalloc S1_alloc
#endif

#ifdef yyrealloc
#define S1_realloc_ALREADY_DEFINED
#else
#define yyrealloc S1_realloc
#endif

#ifdef yyfree
#define S1_free_ALREADY_DEFINED
#else
#define yyfree S1_free
#endif

#ifdef yytext
#define S1_text_ALREADY_DEFINED
#else
#define yytext S1_text
#endif

#ifdef yyleng
#define S1_leng_ALREADY_DEFINED
#else
#define yyleng S1_leng
#endif

#ifdef yyin
#define S1_in_ALREADY_DEFINED
#else
#define yyin S1_in
#endif

#ifdef yyout
#define S1_out_ALREADY_DEFINED
#else
#define yyout S1_out
#endif

#ifdef yyflexdebug
#define S1_flexdebug_ALREADY_DEFINED
#else
#define yyflexdebug S1_flexdebug
#endif

#ifdef yylineno
#define S1_lineno_ALREADY_DEFINED
#else
#define yylineno S1_lineno
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */

/* Feature test macros. Flex uses functions that require a minimum set of
 * macros defined. As defining some macros may hide function declarations that
 * user code might use, be conservative and respect user's definitions as much
 * as possible. In glibc, feature test macros may not be all set up until one
 * of the libc header (that includes <features.h>) is included. This creates
 * a circular dependency when we check the macros. <assert.h> is the safest
 * header we can include and does not declare too many functions we don't need.
 */
#if !defined(__GNU_LIBRARY__) && defined(__STDC__)
#include <assert.h>
#endif
#if !(defined(_POSIX_C_SOURCE) || defined(_XOPEN_SOURCE) || \
    defined(_POSIX_SOURCE))
# define _POSIX_C_SOURCE 1 /* Required for fileno() */
# define _POSIX_SOURCE 1
#endif
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* begin standard C++ headers. */

/* flex integer type definitions */

#ifndef YYFLEX_INTTYPES_DEFINED
#define YYFLEX_INTTYPES_DEFINED

/* Prefer C99 integer types if available. */

# if defined(__cplusplus) && __cplusplus >= 201103L
#include <cstdint>
#  define YYFLEX_USE_STDINT
# endif
# if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
/* Include <inttypes.h> and not <stdint.h> because Solaris 2.6 has the former
 * and not the latter.
 */
#include <inttypes.h>
#  define YYFLEX_USE_STDINT
# else
#  if defined(_MSC_VER) && _MSC_VER >= 1600
/* Visual C++ 2010 does not define __STDC_VERSION__ and has <stdint.h> but not
 * <inttypes.h>.
 */
#include <stdint.h>
#   define YYFLEX_USE_STDINT
#  endif
# endif
# ifdef YYFLEX_USE_STDINT
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
# else
typedef unsigned char flex_uint8_t;
typedef short int flex_int16_t;
typedef unsigned short int flex_uint16_t;
#  ifdef __STDC__
typedef signed char flex_int8_t;
/* ISO C only requires at least 16 bits for int. */
#   ifdef __cplusplus
#include <climits>
#   else
#include <limits.h>
#   endif
#   if UINT_MAX >= 4294967295
#    define YYFLEX_INT32_DEFINED
typedef int flex_int32_t;
typedef unsigned int flex_uint32_t;
#   endif
#  else
typedef char flex_int8_t;
#  endif
#  ifndef YYFLEX_INT32_DEFINED
typedef long int flex_int32_t;
typedef unsigned long int flex_uint32_t;
#  endif
# endif
#endif /* YYFLEX_INTTYPES_DEFINED */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *yybuffer;
/* Legacy interface */
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int yyleng;

extern FILE *yyin, *yyout;

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{

	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yyatbol;

	int yy_bs_lineno; /**< The line count. */
	int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

void yyrestart ( FILE *input_file  );
void yy_switch_to_buffer ( yybuffer new_buffer  );
yybuffer yy_create_buffer ( FILE *file, int size  );
void yy_delete_buffer ( yybuffer b  );
void yy_flush_buffer ( yybuffer b  );
void yypush_buffer_state ( yybuffer new_buffer  );
void yypop_buffer_state ( void );

yybuffer yy_scan_buffer ( char *base, yy_size_t size  );
yybuffer yy_scan_string ( const char *yy_str  );
yybuffer yy_scan_bytes ( const char *bytes, int len  );

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

/* Begin user sect3 */

#define S1_wrap() (/*CONSTCOND*/1)

#define YY_SKIP_YYWRAP

extern int yylineno;

/* Watch out: yytext_ptr is a variable when yytext is an array,
 * but it's a macro when yytext is a pointer.
 */

extern char *yytext;

#ifdef yytext_ptr
#undef yytext_ptr
#endif
#define yytext_ptr yytext

#ifdef YY_HEADER_EXPORT_START_CONDITIONS
#define INITIAL 0
#define NUMERATOR 1
#define DENOMINATOR 2

#endif

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */

#include <unistd.h>

#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( void );

int yyget_debug ( void );

void yyset_debug ( int debug_flag  );

YY_EXTRA_TYPE yyget_extra ( void );

void yyset_extra ( YY_EXTRA_TYPE user_defined  );

FILE *yyget_in ( void );

void yyset_in  ( FILE * _in_str  );

FILE *yyget_out ( void );

void yyset_out  ( FILE * _out_str  );

			int yyget_leng ( void );

char *yyget_text ( void );

int yyget_lineno ( void );

void yyset_lineno ( int _line_number  );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( void );
#else
extern int yywrap ( void );
#endif
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#define YY_NO_YYINPUT 1

#ifndef YY_NO_YYINPUT

#endif

/*
 * Amount of stuff to slurp up with each read.
 * We assume the stdio library has already
 * chosen a fit size foe whatever platform
 * we're running on.
 */
#define YY_READ_BUF_SIZE BUFSIZ

/* Size of default input buffer. We want to be able to fit two
 * OS-level reads, but efficiency gains as the buffer size
 * increases fall off after that
 */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE	(2 * YY_READ_BUF_SIZE)
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex (void);

#define YY_DECL int yylex (void)

#endif /* !YY_DECL */

/* yy_get_previous_state - get the state just before the EOB char was reached */

#undef YY_NEW_FILE
#undef YY_FLUSH_BUFFER
#undef yysetbol
#undef yy_new_buffer
#undef yy_set_interactive
#undef YY_DO_BEFORE_ACTION

#ifdef YY_DECL_IS_OURS
#undef YY_DECL_IS_OURS
#undef YY_DECL
#endif

#ifndef S1__create_buffer_ALREADY_DEFINED
#undef yy_create_buffer
#endif
#ifndef S1__delete_buffer_ALREADY_DEFINED
#undef yy_delete_buffer
#endif
#ifndef S1__scan_buffer_ALREADY_DEFINED
#undef yy_scan_buffer
#endif
#ifndef S1__scan_string_ALREADY_DEFINED
#undef yy_scan_string
#endif
#ifndef S1__scan_bytes_ALREADY_DEFINED
#undef yy_scan_bytes
#endif
#ifndef S1__init_buffer_ALREADY_DEFINED
#undef yy_init_buffer
#endif
#ifndef S1__flush_buffer_ALREADY_DEFINED
#undef yy_flush_buffer
#endif
#ifndef S1__load_buffer_state_ALREADY_DEFINED
#undef yy_load_buffer_state
#endif
#ifndef S1__switch_to_buffer_ALREADY_DEFINED
#undef yy_switch_to_buffer
#endif
#ifndef S1_push_buffer_state_ALREADY_DEFINED
#undef yypush_buffer_state
#endif
#ifndef S1_pop_buffer_state_ALREADY_DEFINED
#undef yypop_buffer_state
#endif
#ifndef S1_ensure_buffer_stack_ALREADY_DEFINED
#undef yyensure_buffer_stack
#endif
#ifndef S1_lex_ALREADY_DEFINED
#undef yylex
#endif
#ifndef S1_restart_ALREADY_DEFINED
#undef yyrestart
#endif
#ifndef S1_lex_init_ALREADY_DEFINED
#undef yylex_init
#endif
#ifndef S1_lex_init_extra_ALREADY_DEFINED
#undef yylex_init_extra
#endif
#ifndef S1_lex_destroy_ALREADY_DEFINED
#undef yylex_destroy
#endif
#ifndef S1_get_debug_ALREADY_DEFINED
#undef yyget_debug
#endif
#ifndef S1_set_debug_ALREADY_DEFINED
#undef yyset_debug
#endif
#ifndef S1_get_extra_ALREADY_DEFINED
#undef yyget_extra
#endif
#ifndef S1_set_extra_ALREADY_DEFINED
#undef yyset_extra
#endif
#ifndef S1_get_in_ALREADY_DEFINED
#undef yyget_in
#endif
#ifndef S1_set_in_ALREADY_DEFINED
#undef yyset_in
#endif
#ifndef S1_get_out_ALREADY_DEFINED
#undef yyget_out
#endif
#ifndef S1_set_out_ALREADY_DEFINED
#undef yyset_out
#endif
#ifndef S1_get_leng_ALREADY_DEFINED
#undef yyget_leng
#endif
#ifndef S1_get_text_ALREADY_DEFINED
#undef yyget_text
#endif
#ifndef S1_get_lineno_ALREADY_DEFINED
#undef yyget_lineno
#endif
#ifndef S1_set_lineno_ALREADY_DEFINED
#undef yyset_lineno
#endif
#ifndef S1_get_column_ALREADY_DEFINED
#undef yyget_column
#endif
#ifndef S1_set_column_ALREADY_DEFINED
#undef yyset_column
#endif
#ifndef S1_wrap_ALREADY_DEFINED
#undef yywrap
#endif
#ifndef S1_get_lval_ALREADY_DEFINED
#undef yyget_lval
#endif
#ifndef S1_set_lval_ALREADY_DEFINED
#undef yyset_lval
#endif
#ifndef S1_get_lloc_ALREADY_DEFINED
#undef yyget_lloc
#endif
#ifndef S1_set_lloc_ALREADY_DEFINED
#undef yyset_lloc
#endif
#ifndef S1_alloc_ALREADY_DEFINED
#undef yyalloc
#endif
#ifndef S1_realloc_ALREADY_DEFINED
#undef yyrealloc
#endif
#ifndef S1_free_ALREADY_DEFINED
#undef yyfree
#endif
#ifndef S1_text_ALREADY_DEFINED
#undef yytext
#endif
#ifndef S1_leng_ALREADY_DEFINED
#undef yyleng
#endif
#ifndef S1_in_ALREADY_DEFINED
#undef yyin
#endif
#ifndef S1_out_ALREADY_DEFINED
#undef yyout
#endif
#ifndef S1_flexdebug_ALREADY_DEFINED
#undef yyflexdebug
#endif
#ifndef S1_lineno_ALREADY_DEFINED
#undef yylineno
#endif
#ifndef S1_tables_fload_ALREADY_DEFINED
#undef yytables_fload
#endif
#ifndef S1_tables_destroy_ALREADY_DEFINED
#undef yytables_destroy
#endif
#ifndef S1_TABLES_NAME_ALREADY_DEFINED
#undef yyTABLES_NAME
#endif
#undef S1_IN_HEADER
#endif /* S1_HEADER_H */

#line 74 "scanner.l"





