#  completion                               -*- shell-script -*-

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !
# ! Note:
# !
# ! THIS SCRIPT HAS BEEN AUTOMATICALLY GENERATED USING
# ! openapi-generator (https://openapi-generator.tech)
# ! FROM OPENAPI SPECIFICATION IN JSON.
# !
# ! Generator version: 7.10.0
# !
# !
# ! System wide installation:
# !
# ! $ sudo cp .bash-completion /etc/bash-completion.d/
# !
# !
# ! User home installation (add this line to .bash_profile):
# !
# ! [ -r ~/.bash-completion ] && source ~/.bash-completion
# !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

declare -A mime_type_abbreviations
# text/*
mime_type_abbreviations["text"]="text/plain"
mime_type_abbreviations["html"]="text/html"
mime_type_abbreviations["md"]="text/x-markdown"
mime_type_abbreviations["csv"]="text/csv"
mime_type_abbreviations["css"]="text/css"
mime_type_abbreviations["rtf"]="text/rtf"
# application/*
mime_type_abbreviations["json"]="application/json"
mime_type_abbreviations["xml"]="application/xml"
mime_type_abbreviations["yaml"]="application/yaml"
mime_type_abbreviations["js"]="application/javascript"
mime_type_abbreviations["bin"]="application/octet-stream"
mime_type_abbreviations["rdf"]="application/rdf+xml"
# image/*
mime_type_abbreviations["jpg"]="image/jpeg"
mime_type_abbreviations["png"]="image/png"
mime_type_abbreviations["gif"]="image/gif"
mime_type_abbreviations["bmp"]="image/bmp"
mime_type_abbreviations["tiff"]="image/tiff"


#
# Check if this is OSX, if so defined custom init_completion
#
if [[ `uname` =~ "Darwin" ]]; then
    __osx_init_completion()
    {
        COMPREPLY=()
        _get_comp_words_by_ref cur prev words cword
    }
fi

_()
{
    local cur
    local prev
    local words
    local cword

    # The reference of currently selected REST operation
    local operation=""

    # The list of available operation in the REST service
    # It's modelled as an associative array for efficient key lookup
    declare -A operations
    operations["create"]=1
    operations["delete"]=1
    operations["get"]=1
    operations["list"]=1
    operations["update"]=1
    operations["get16"]=1
    operations["post2"]=1
    operations["get17"]=1
    operations["startArthas"]=1
    operations["create1"]=1
    operations["delete1"]=1
    operations["get1"]=1
    operations["list1"]=1
    operations["update1"]=1
    operations["post3"]=1
    operations["post5"]=1
    operations["get18"]=1
    operations["post6"]=1
    operations["post7"]=1
    operations["post"]=1
    operations["query"]=1
    operations["getExternalGrammar"]=1
    operations["getWadl"]=1
    operations["create6"]=1
    operations["create7"]=1
    operations["delete6"]=1
    operations["get7"]=1
    operations["list6"]=1
    operations["update6"]=1
    operations["update7"]=1
    operations["get19"]=1
    operations["create11"]=1
    operations["delete9"]=1
    operations["get12"]=1
    operations["list12"]=1
    operations["update11"]=1
    operations["list17"]=1
    operations["scan"]=1
    operations["shards"]=1
    operations["post8"]=1
    operations["clear"]=1
    operations["compact"]=1
    operations["create10"]=1
    operations["createSnapshot"]=1
    operations["drop"]=1
    operations["get11"]=1
    operations["getConf"]=1
    operations["graphReadMode"]=1
    operations["graphReadMode1"]=1
    operations["list9"]=1
    operations["mode"]=1
    operations["mode1"]=1
    operations["resumeSnapshot"]=1
    operations["get9"]=1
    operations["post1"]=1
    operations["post4"]=1
    operations["create2"]=1
    operations["delete2"]=1
    operations["get2"]=1
    operations["list2"]=1
    operations["update2"]=1
    operations["create12"]=1
    operations["delete10"]=1
    operations["get13"]=1
    operations["list13"]=1
    operations["update12"]=1
    operations["get20"]=1
    operations["post9"]=1
    operations["get21"]=1
    operations["post10"]=1
    operations["get22"]=1
    operations["post11"]=1
    operations["login"]=1
    operations["logout"]=1
    operations["verifyToken"]=1
    operations["all"]=1
    operations["backend"]=1
    operations["counters"]=1
    operations["gauges"]=1
    operations["histograms"]=1
    operations["meters"]=1
    operations["statistics"]=1
    operations["system"]=1
    operations["timers"]=1
    operations["post12"]=1
    operations["neighborRank"]=1
    operations["get23"]=1
    operations["post13"]=1
    operations["personalRank"]=1
    operations["getProfile"]=1
    operations["showAllAPIs"]=1
    operations["create3"]=1
    operations["delete3"]=1
    operations["get3"]=1
    operations["list3"]=1
    operations["update3"]=1
    operations["create13"]=1
    operations["delete11"]=1
    operations["get14"]=1
    operations["list14"]=1
    operations["update13"]=1
    operations["addPeer"]=1
    operations["getLeader"]=1
    operations["listPeers"]=1
    operations["removePeer"]=1
    operations["setLeader"]=1
    operations["transferLeader"]=1
    operations["get24"]=1
    operations["edgeLabelRebuild"]=1
    operations["indexLabelRebuild"]=1
    operations["vertexLabelRebuild"]=1
    operations["create15"]=1
    operations["get25"]=1
    operations["get26"]=1
    operations["sameNeighbors"]=1
    operations["list15"]=1
    operations["get27"]=1
    operations["get28"]=1
    operations["create4"]=1
    operations["delete4"]=1
    operations["get4"]=1
    operations["list4"]=1
    operations["update4"]=1
    operations["delete8"]=1
    operations["get10"]=1
    operations["list8"]=1
    operations["update10"]=1
    operations["post14"]=1
    operations["get6"]=1
    operations["trace"]=1
    operations["create5"]=1
    operations["delete5"]=1
    operations["get5"]=1
    operations["list5"]=1
    operations["role"]=1
    operations["update5"]=1
    operations["delete13"]=1
    operations["get30"]=1
    operations["list19"]=1
    operations["update15"]=1
    operations["list10"]=1
    operations["create8"]=1
    operations["create9"]=1
    operations["delete7"]=1
    operations["get8"]=1
    operations["list7"]=1
    operations["update8"]=1
    operations["update9"]=1
    operations["create14"]=1
    operations["delete12"]=1
    operations["get15"]=1
    operations["list16"]=1
    operations["update14"]=1
    operations["list18"]=1
    operations["scan1"]=1
    operations["shards1"]=1
    operations["get29"]=1
    operations["list11"]=1
    operations["updateStatus"]=1
    operations["updateWhiteIPs"]=1

    # An associative array of operations to their parameters
    # Only include path, query and header parameters
    declare -A operation_parameters
    operation_parameters["create"]="graph= "
    operation_parameters["delete"]="graph= id= "
    operation_parameters["get"]="graph= id= "
    operation_parameters["list"]="graph= group= target= limit= "
    operation_parameters["update"]="graph= id= "
    operation_parameters["get16"]="graph= vertex= other= direction= label= max_degree= limit= "
    operation_parameters["post2"]="graph= name= "
    operation_parameters["get17"]="graph= source= target= direction= label= max_depth= max_degree= skip_degree= with_vertex= with_edge= capacity= "
    operation_parameters["startArthas"]=""
    operation_parameters["create1"]="graph= "
    operation_parameters["delete1"]="graph= id= "
    operation_parameters["get1"]="graph= id= "
    operation_parameters["list1"]="graph= user= group= limit= "
    operation_parameters["update1"]="graph= id= "
    operation_parameters["post3"]="graph= name= "
    operation_parameters["post5"]="graph= "
    operation_parameters["get18"]="graph= source= target= direction= label= max_depth= max_degree= capacity= limit= "
    operation_parameters["post6"]="graph= "
    operation_parameters["post7"]="graph= "
    operation_parameters["post"]="graph= "
    operation_parameters["query"]="graph= cypher= "
    operation_parameters["getExternalGrammar"]="path= "
    operation_parameters["getWadl"]=""
    operation_parameters["create6"]="graph= "
    operation_parameters["create7"]="graph= check_vertex= "
    operation_parameters["delete6"]="graph= id= label= "
    operation_parameters["get7"]="graph= id= "
    operation_parameters["list6"]="graph= vertex_id= direction= label= properties= keep_start_p= offset= page= limit= "
    operation_parameters["update6"]="graph= "
    operation_parameters["update7"]="graph= id= action= "
    operation_parameters["get19"]="graph= source= target= label= sort_values= limit= "
    operation_parameters["create11"]="graph= "
    operation_parameters["delete9"]="graph= name= "
    operation_parameters["get12"]="graph= name= "
    operation_parameters["list12"]="graph= names= "
    operation_parameters["update11"]="graph= name= action= "
    operation_parameters["list17"]="graph= ids= "
    operation_parameters["scan"]="graph= start= end= page= page_limit= "
    operation_parameters["shards"]="graph= split_size= "
    operation_parameters["post8"]="graph= "
    operation_parameters["clear"]="name= confirm_message= "
    operation_parameters["compact"]="name= "
    operation_parameters["create10"]="name= clone_graph_name= "
    operation_parameters["createSnapshot"]="name= "
    operation_parameters["drop"]="name= confirm_message= "
    operation_parameters["get11"]="name= "
    operation_parameters["getConf"]="name= "
    operation_parameters["graphReadMode"]="name= "
    operation_parameters["graphReadMode1"]="name= "
    operation_parameters["list9"]=""
    operation_parameters["mode"]="name= "
    operation_parameters["mode1"]="name= "
    operation_parameters["resumeSnapshot"]="name= "
    operation_parameters["get9"]=""
    operation_parameters["post1"]=""
    operation_parameters["post4"]="graph= "
    operation_parameters["create2"]="graph= "
    operation_parameters["delete2"]="graph= id= "
    operation_parameters["get2"]="graph= id= "
    operation_parameters["list2"]="graph= limit= "
    operation_parameters["update2"]="graph= id= "
    operation_parameters["create12"]="graph= "
    operation_parameters["delete10"]="graph= name= "
    operation_parameters["get13"]="graph= name= "
    operation_parameters["list13"]="graph= names= "
    operation_parameters["update12"]="graph= name= action= "
    operation_parameters["get20"]="graph= vertex= other= direction= label= max_degree= "
    operation_parameters["post9"]="graph= "
    operation_parameters["get21"]="graph= source= direction= label= max_depth= count_only= max_degree= limit= "
    operation_parameters["post10"]="graph= "
    operation_parameters["get22"]="graph= source= direction= label= max_depth= nearest= count_only= max_degree= capacity= limit= "
    operation_parameters["post11"]="graph= "
    operation_parameters["login"]="graph= "
    operation_parameters["logout"]="graph= Authorization: "
    operation_parameters["verifyToken"]="graph= Authorization: "
    operation_parameters["all"]="type= "
    operation_parameters["backend"]=""
    operation_parameters["counters"]=""
    operation_parameters["gauges"]=""
    operation_parameters["histograms"]=""
    operation_parameters["meters"]=""
    operation_parameters["statistics"]="type= "
    operation_parameters["system"]=""
    operation_parameters["timers"]=""
    operation_parameters["post12"]="graph= "
    operation_parameters["neighborRank"]="graph= "
    operation_parameters["get23"]="graph= source= target= direction= label= max_depth= max_degree= capacity= limit= "
    operation_parameters["post13"]="graph= "
    operation_parameters["personalRank"]="graph= "
    operation_parameters["getProfile"]=""
    operation_parameters["showAllAPIs"]=""
    operation_parameters["create3"]="graph= "
    operation_parameters["delete3"]="graph= id= "
    operation_parameters["get3"]="graph= id= "
    operation_parameters["list3"]="graph= limit= "
    operation_parameters["update3"]="graph= id= action= "
    operation_parameters["create13"]="graph= "
    operation_parameters["delete11"]="graph= name= "
    operation_parameters["get14"]="graph= name= "
    operation_parameters["list14"]="graph= names= "
    operation_parameters["update13"]="graph= name= action= "
    operation_parameters["addPeer"]="graph= group= endpoint= "
    operation_parameters["getLeader"]="graph= group= "
    operation_parameters["listPeers"]="graph= group= "
    operation_parameters["removePeer"]="graph= group= endpoint= "
    operation_parameters["setLeader"]="graph= group= endpoint= "
    operation_parameters["transferLeader"]="graph= group= endpoint= "
    operation_parameters["get24"]="graph= source= direction= label= max_depth= max_degree= capacity= limit= with_vertex= with_edge= "
    operation_parameters["edgeLabelRebuild"]="graph= name= "
    operation_parameters["indexLabelRebuild"]="graph= name= "
    operation_parameters["vertexLabelRebuild"]="graph= name= "
    operation_parameters["create15"]="graph= vertex= other= direction= label= max_degree= limit= "
    operation_parameters["get25"]="graph= source= direction= label= max_depth= source_in_ring= max_degree= capacity= limit= with_vertex= with_edge= "
    operation_parameters["get26"]="graph= vertex= other= direction= label= max_degree= limit= "
    operation_parameters["sameNeighbors"]="graph= "
    operation_parameters["list15"]="graph= "
    operation_parameters["get27"]="graph= source= target= direction= label= max_depth= max_degree= skip_degree= with_vertex= with_edge= capacity= "
    operation_parameters["get28"]="graph= source= direction= label= weight= max_degree= skip_degree= with_vertex= with_edge= capacity= limit= "
    operation_parameters["create4"]="graph= "
    operation_parameters["delete4"]="graph= id= "
    operation_parameters["get4"]="graph= id= "
    operation_parameters["list4"]="graph= limit= "
    operation_parameters["update4"]="graph= id= "
    operation_parameters["delete8"]="graph= id= force= "
    operation_parameters["get10"]="graph= id= "
    operation_parameters["list8"]="graph= status= ids= limit= page= "
    operation_parameters["update10"]="graph= id= action= "
    operation_parameters["post14"]="graph= "
    operation_parameters["get6"]=""
    operation_parameters["trace"]=""
    operation_parameters["create5"]="graph= "
    operation_parameters["delete5"]="graph= id= "
    operation_parameters["get5"]="graph= id= "
    operation_parameters["list5"]="graph= limit= "
    operation_parameters["role"]="graph= id= "
    operation_parameters["update5"]="graph= id= "
    operation_parameters["delete13"]="graph= key= "
    operation_parameters["get30"]="graph= key= "
    operation_parameters["list19"]="graph= "
    operation_parameters["update15"]="graph= key= "
    operation_parameters["list10"]=""
    operation_parameters["create8"]="graph= "
    operation_parameters["create9"]="graph= "
    operation_parameters["delete7"]="graph= id= label= "
    operation_parameters["get8"]="graph= id= "
    operation_parameters["list7"]="graph= label= properties= keep_start_p= offset= page= limit= "
    operation_parameters["update8"]="graph= "
    operation_parameters["update9"]="graph= id= action= "
    operation_parameters["create14"]="graph= "
    operation_parameters["delete12"]="graph= name= "
    operation_parameters["get15"]="graph= name= "
    operation_parameters["list16"]="graph= names= "
    operation_parameters["update14"]="graph= name= action= "
    operation_parameters["list18"]="graph= ids= "
    operation_parameters["scan1"]="graph= start= end= page= page_limit= "
    operation_parameters["shards1"]="graph= split_size= "
    operation_parameters["get29"]="graph= source= target= direction= label= weight= max_degree= skip_degree= with_vertex= with_edge= capacity= "
    operation_parameters["list11"]=""
    operation_parameters["updateStatus"]="status= "
    operation_parameters["updateWhiteIPs"]=""

    # An associative array of possible values for enum parameters
    declare -A operation_parameters_enum_values
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["get17::with_vertex"]="true false"
    operation_parameters_enum_values["get17::with_edge"]="true false"
    operation_parameters_enum_values["create7::check_vertex"]="true false"
    operation_parameters_enum_values["create7::check_vertex"]="true false"
    operation_parameters_enum_values["create7::check_vertex"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["list6::keep_start_p"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get21::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get22::nearest"]="true false"
    operation_parameters_enum_values["get22::count_only"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get24::with_vertex"]="true false"
    operation_parameters_enum_values["get24::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get25::source_in_ring"]="true false"
    operation_parameters_enum_values["get25::with_vertex"]="true false"
    operation_parameters_enum_values["get25::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get27::with_vertex"]="true false"
    operation_parameters_enum_values["get27::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["get28::with_vertex"]="true false"
    operation_parameters_enum_values["get28::with_edge"]="true false"
    operation_parameters_enum_values["delete8::force"]="true false"
    operation_parameters_enum_values["delete8::force"]="true false"
    operation_parameters_enum_values["delete8::force"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["list7::keep_start_p"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"
    operation_parameters_enum_values["get29::with_vertex"]="true false"
    operation_parameters_enum_values["get29::with_edge"]="true false"

    #
    # Check if this is OSX and use special __osx_init_completion function
    #
    if [[ `uname` =~ "Darwin" ]]; then
        __osx_init_completion || return
    else
        _init_completion -s || return
    fi


    # Check if operation is already in the command line provided
    for word in "${words[@]}"; do
        if [[ -n $word && ${operations[$word]} ]]; then
            operation="${word}"
        fi
    done

    if [[ -z $operation ]]; then
        case $prev in
            --ciphers|--connect-timeout|-C|--continue-at|-F|--form|--form-string|\
            --ftp-account|--ftp-alternative-to-user|-P|--ftp-port|-H|--header|-h|\
            --help|--hostpubmd5|--keepalive-time|--krb|--limit-rate|--local-port|\
            --mail-from|--mail-rcpt|--max-filesize|--max-redirs|-m|--max-time|\
            --pass|--proto|--proto-redir|--proxy-user|--proxy1.0|-Q|--quote|-r|\
            --range|-X|--request|--retry|--retry-delay|--retry-max-time|\
            --socks5-gssapi-service|-t|--telnet-option|--tftp-blksize|-z|\
            --time-cond|--url|-u|--user|-A|--user-agent|-V|--version|-w|\
            --write-out|--resolve|--tlsuser|--tlspassword|--about)
                return
                ;;
            -K|--config|-b|--cookie|-c|--cookie-jar|-D|--dump-header|--egd-file|\
            --key|--libcurl|-o|--output|--random-file|-T|--upload-file|--trace|\
            --trace-ascii|--netrc-file)
                _filedir
                return
                ;;
            --cacert|-E|--cert)
                _filedir '@(c?(e)rt|cer|pem|der)'
                return
                ;;
            --capath)
                _filedir -d
                return
                ;;
            --cert-type|--key-type)
                COMPREPLY=( $( compgen -W 'DER PEM ENG' -- "$cur" ) )
                return
                ;;
            --crlfile)
                _filedir crl
                return
                ;;
            -d|--data|--data-ascii|--data-binary|--data-urlencode)
                if [[ $cur == \@* ]]; then
                    cur=${cur:1}
                    _filedir
                    COMPREPLY=( "${COMPREPLY[@]/#/@}" )
                fi
                return
                ;;
            --delegation)
                COMPREPLY=( $( compgen -W 'none policy always' -- "$cur" ) )
                return
                ;;
            --engine)
                COMPREPLY=( $( compgen -W 'list' -- "$cur" ) )
                return
                ;;
            --ftp-method)
                COMPREPLY=( $( compgen -W 'multicwd nocwd singlecwd' -- "$cur" ) )
                return
                ;;
            --ftp-ssl-ccc-mode)
                COMPREPLY=( $( compgen -W 'active passive' -- "$cur" ) )
                return
                ;;
            --interface)
                _available_interfaces -a
                return
                ;;
            -x|--proxy|--socks4|--socks4a|--socks5|--socks5-hostname)
                _known_hosts_real
                return
                ;;
            --pubkey)
                _filedir pub
                return
                ;;
            --stderr)
                COMPREPLY=( $( compgen -W '-' -- "$cur" ) )
                _filedir
                return
                ;;
            --tlsauthtype)
                COMPREPLY=( $( compgen -W 'SRP' -- "$cur" ) )
                return
                ;;
            --host)
                COMPREPLY=( $( compgen -W 'http:// https://' -- "$cur" ) )
                return
                ;;
            -ct|--content-type|-ac|--accept)
                COMPREPLY=( $( compgen -W '${!mime_type_abbreviations[*]}' -- "$cur" ) )
                return
                ;;
        esac
    fi

    #
    # Complete the server address based on ~/.ssh/known_hosts
    # and ~/.ssh/config
    #
    local prefix=${COMP_WORDS[COMP_CWORD-2]}
    local colon=${COMP_WORDS[COMP_CWORD-1]}
    if [[ "$colon" == ":" && ( $prefix == "https" || $prefix == "http" ) ]]; then
        COMPREPLY=()
        local comp_ssh_hosts=`[[ -f ~/.ssh/known_hosts ]] && \
                              ( cat ~/.ssh/known_hosts | \
                              grep '^[a-zA-Z0-9]' | \
                              cut -f 1 -d ' ' | \
                              sed -e s/,.*//g | \
                              grep -v ^# | \
                              uniq | \
                              grep -v "\[" ) ;
                              [[ -f ~/.ssh/config ]] && \
                              ( cat ~/.ssh/config | \
                              grep "^Host " | \
                              awk '{print $2}' )`
        COMPREPLY=( $( compgen -P '//' -W '${comp_ssh_hosts}' -- "${cur:2}") )
        return
    fi

    #
    # Complete the  and cURL's arguments
    #
    if [[ $cur == -* ]]; then
        COMPREPLY=( $( compgen -W '$(_parse_help curl) $(_parse_help $1)' -- "$cur" ) )
        return
    fi

    #
    # If the argument starts with a letter this could be either an operation
    # or an operation parameter
    # When $cur is empty, suggest the list of operations by default
    #
    if [[ $cur =~ ^[A-Za-z_0-9]* ]]; then
        # If operation has not been yet selected, suggest the list of operations
        # otherwise suggest arguments of this operation as declared in the
        # OpenAPI specification
        if [[ -z $operation ]]; then
            COMPREPLY=( $(compgen -W '${!operations[*]}' -- ${cur}) )
        else
            COMPREPLY=( $(compgen -W '${operation_parameters[$operation]}' -- ${cur}) )
            compopt -o nospace
        fi
        return
    fi

} &&
complete -F _ 

# ex: ts=4 sw=4 et filetype=sh
