%%{
  machine latex;

PDG_vocab= '\\addExprXtoExprY'|'\\addition'|'\\addXtobothsides'|'\\addXtoBothSides'|'\\addZerotoLHS'|'\\addZerotoRHS'|'\\alpha'|'\\appendix'|'\\applyDivergence'|'\\applyGradientToScalarFunction'|'\\applyOperatorToBra'|'\\applyOperatorToKet'|'\\approx'|'\\arctan'|'\\ArgEight'|'\\ArgFive'|'\\ArgFour'|'\\ArgNine'|'\\ArgOne'|'\\ArgSeven'|'\\ArgSix'|'\\ArgThree'|'\\ArgTwo'|'\\AssumeNdimensions'|'\\author'|'\\backepsilon'|'\\bb'|'\\begin'|'\\beta'|'\\bhover'|'\\bibliography'|'\\bibliographystyle'|'\\big'|'\\bigg'|'\\boldmath'|'\\boldsymbol'|'\\bothsidescrossX'|'\\bothsidesdotX'|'\\boundaryCondition'|'\\bra'|'\\braket'|'\\bsortable'|'\\bsortbottom'|'\\bsorttable'|'\\cal'|'\\calH'|'\\caption'|'\\cdot'|'\\cf'|'\\circ'|'\\cite'|'\\claim'|'\\claimExprXequalsExprY'|'\\claimLHSequalsRHS'|'\\color'|'\\combineLikeTerms'|'\\conjugateBothSides'|'\\conjugateFunctionX'|'\\conjugateTransposeBothSides'|'\\cos'|'\\cosh'|'\\cosine'|'\\cross'|'\\curl'|'\\cvval'|'\\dagger'|'\\date'|'\\ddot'|'\\de'|'\\declareAssumption'|'\\declareFinalExpr'|'\\declareFinalExpression'|'\\declareGuessSolution'|'\\declareIdentity'|'\\declareInitialExpr'|'\\declareInitialExpression'|'\\def'|'\\definecolor'|'\\del'|'\\delta'|'\\Delta'|'\\Desktop'|'\\differentiateWRT'|'\\distributeConjugateToFactors'|'\\distributeConjugateTransposeToFactors'|'\\dividebothsidesby'|'\\divisionFrac'|'\\divisionOneLine'|'\\divisionSameLine'|'\\DOC'|'\\documentclass'|'\\Documents'|'\\dot'|'\\dotproduct'|'\\eg'|'\\elementwiseAddition'|'\\end'|'\\ensuremath'|'\\EOF'|'\\epsilon'|'\\eqn'|'\\eqref'|'\\equals'|'\\equiv'|'\\EvaluateDefiniteIntegral'|'\\exists'|'\\expandIntegrand'|'\\expandLHS'|'\\expandMagnitudeToConjugate'|'\\expandRHS'|'\\ExprXisTrueUnderconditionExprY'|'\\factorOutX'|'\\factorOutXfromLHS'|'\\factorOutXfromRHS'|'\\fi'|'\\footnote'|'\\forall'|'\\frac'|'\\function'|'\\functionIsEven'|'\\functionIsOdd'|'\\gamma'|'\\geq'|'\\giacinputmath'|'\\hbar'|'\\hline'|'\\href'|'\\huge'|'\\Huge'|'\\ie'|'\\iffalse'|'\\in'|'\\include'|'\\includegraphics'|'\\indefIntegration'|'\\indefIntLHSOver'|'\\indefIntOver'|'\\indefIntRHSOver'|'\\inf'|'\\infint'|'\\infty'|'\\input'|'\\int'|'\\integer'|'\\integralDefinite'|'\\integralIndefinite'|'\\IntOverFromTo'|'\\it'|'\\kappa'|'\\ket'|'\\label'|'\\lamba'|'\\lambda'|'\\Lambda'|'\\langle'|'\\LaTeX'|'\\ldots'|'\\left'|'\\leq'|'\\LHSofExprXeqLHSofExprY'|'\\limits'|'\\ln'|'\\log'|'\\lt'|'\\makeExprPower'|'\\maketitle'|'\\mathbb'|'\\mathbf'|'\\mathcal'|'\\mathrm'|'\\mu'|'\\multbothsidesby'|'\\multExprXbyExprY'|'\\multicolinterrupt'|'\\multiplication'|'\\multLHSbyUnity'|'\\multRHSbyUnity'|'\\na'|'\\nabla'|'\\named'|'\\nChoice'|'\\nchoose'|'\\ncoarse'|'\\nconnections'|'\\ncontent'|'\\ne'|'\\nEnter'|'\\neq'|'\\nequation'|'\\nEquation'|'\\nequations'|'\\nerror'|'\\newcommand'|'\\newpage'|'\\nexisting'|'\\nexpression'|'\\nExtracted'|'\\nfeed'|'\\nfield'|'\\nfor'|'\\ngas'|'\\nhttps'|'\\nIf'|'\\nin'|'\\nIn'|'\\ninference'|'\\ninput'|'\\nIP'|'\\njust'|'\\nLaw'|'\\nLaws'|'\\nm'|'\\nmechanics'|'\\nMust'|'\\nof'|'\\nop'|'\\normalizationCondition'|'\\noscillator'|'\\nouput'|'\\nphysics'|'\\nPress'|'\\nprint'|'\\nprompt'|'\\nr'|'\\nrelation'|'\\nrequires'|'\\nResulting'|'\\nRHS'|'\\nSavart'|'\\nsecond'|'\\nselected'|'\\nselection'|'\\nstep'|'\\nStep'|'\\nsummary'|'\\nsymbol'|'\\nthird'|'\\nu'|'\\nwhich'|'\\ny'|'\\oddsidemargin'|'\\Ohm'|'\\oint'|'\\olegalex'|'\\omega'|'\\Omega'|'\\op'|'\\operator'|'\\over'|'\\pagecolor'|'\\pagestyle'|'\\partial'|'\\partialDiffWRT'|'\\pdg'|'\\pfrac'|'\\phi'|'\\Phi'|'\\pi'|'\\pm'|'\\PreviewEnvironment'|'\\propto'|'\\psi'|'\\Psi'|'\\qquad'|'\\quad'|'\\raiseBothSidesToPower'|'\\rangle'|'\\Re'|'\\rEarth'|'\\ref'|'\\relation'|'\\ReplaceCurlWithLeviCevitaSummationContravariant'|'\\replaceScalarWithVector'|'\\ReplaceSummationNotationWithVectorNotation'|'\\rho'|'\\RHSofExprXeqRHSofExprY'|'\\right'|'\\rightarrow'|'\\rm'|'\\rowContravariantColumnCovariant'|'\\rowCovariantColumnContravariant'|'\\rvert'|'\\section'|'\\selectImagParts'|'\\selectRealParts'|'\\setlength'|'\\si'|'\\sigma'|'\\simplify'|'\\sin'|'\\sine'|'\\sinh'|'\\solveForX'|'\\spatialVectorDifferential'|'\\subLHSofExprXintoExprY'|'\\subRHSofExprXintoExprY'|'\\subsection'|'\\subtraction'|'\\subtractXfromBothSides'|'\\subXforY'|'\\sum'|'\\sumExponents'|'\\sumExponentsLHS'|'\\sumExponentsRHS'|'\\summation'|'\\swapLHSwithRHS'|'\\symbol'|'\\tableofcontents'|'\\takeCurlofBothSides'|'\\tan'|'\\tanh'|'\\text'|'\\textbar'|'\\textheight'|'\\textit'|'\\texttt'|'\\textwidth'|'\\tfrac'|'\\theta'|'\\Theta'|'\\thispagestyle'|'\\times'|'\\title'|'\\to'|'\\today'|'\\topmargin'|'\\uAD'|'\\uC'|'\\uD'|'\\uEFEF'|'\\uFF'|'\\uFFFF'|'\\usepackage'|'\\varepsilon'|'\\vdots'|'\\vec'|'\\verbatiminput'|'\\vert'|'\\when'|'\\xA'|'\\xb'|'\\Xcrossbothsidesby'|'\\Xdotbothsides'|'\\xi';

comment= '%' (any{0,100}-'\n') :> '\n';
abstract_begin = '\\begin{abstract}' @{n++; };
abstract_end  = '\\end{abstract}' @{n--; };
abstract_body = any+ - (abstract_begin|abstract_end);
abstract = '\\begin{abstract}' @{n=1;}  (abstract_begin|abstract_end|abstract_body)*    abstract_end  :> any when{!n};
ack_begin = '\\begin{ack}' @{n++; };
ack_end  = '\\end{ack}' @{n--; };
ack_body = any+ - (ack_begin|ack_end);
ack = '\\begin{ack}' @{n=1;}  (ack_begin|ack_end|ack_body)*    ack_end  :> any when{!n};
acknowledgement_begin = '\\begin{acknowledgement}' @{n++; };
acknowledgement_end  = '\\end{acknowledgement}' @{n--; };
acknowledgement_body = any+ - (acknowledgement_begin|acknowledgement_end);
acknowledgement = '\\begin{acknowledgement}' @{n=1;}  (acknowledgement_begin|acknowledgement_end|acknowledgement_body)*    acknowledgement_end  :> any when{!n};
acknowledgements_begin = '\\begin{acknowledgements}' @{n++; };
acknowledgements_end  = '\\end{acknowledgements}' @{n--; };
acknowledgements_body = any+ - (acknowledgements_begin|acknowledgements_end);
acknowledgements = '\\begin{acknowledgements}' @{n=1;}  (acknowledgements_begin|acknowledgements_end|acknowledgements_body)*    acknowledgements_end  :> any when{!n};
acknowledgments_begin = '\\begin{acknowledgments}' @{n++; };
acknowledgments_end  = '\\end{acknowledgments}' @{n--; };
acknowledgments_body = any+ - (acknowledgments_begin|acknowledgments_end);
acknowledgments = '\\begin{acknowledgments}' @{n=1;}  (acknowledgments_begin|acknowledgments_end|acknowledgments_body)*    acknowledgments_end  :> any when{!n};
acks_begin = '\\begin{acks}' @{n++; };
acks_end  = '\\end{acks}' @{n--; };
acks_body = any+ - (acks_begin|acks_end);
acks = '\\begin{acks}' @{n=1;}  (acks_begin|acks_end|acks_body)*    acks_end  :> any when{!n};
adjustbox_begin = '\\begin{adjustbox}' @{n++; };
adjustbox_end  = '\\end{adjustbox}' @{n--; };
adjustbox_body = any+ - (adjustbox_begin|adjustbox_end);
adjustbox = '\\begin{adjustbox}' @{n=1;}  (adjustbox_begin|adjustbox_end|adjustbox_body)*    adjustbox_end  :> any when{!n};
algorithm_begin = '\\begin{algorithm}' @{n++; };
algorithm_end  = '\\end{algorithm}' @{n--; };
algorithm_body = any+ - (algorithm_begin|algorithm_end);
algorithm = '\\begin{algorithm}' @{n=1;}  (algorithm_begin|algorithm_end|algorithm_body)*    algorithm_end  :> any when{!n};
algorithmic_begin = '\\begin{algorithmic}' @{n++; };
algorithmic_end  = '\\end{algorithmic}' @{n--; };
algorithmic_body = any+ - (algorithmic_begin|algorithmic_end);
algorithmic = '\\begin{algorithmic}' @{n=1;}  (algorithmic_begin|algorithmic_end|algorithmic_body)*    algorithmic_end  :> any when{!n};
align_begin = '\\begin{align}' @{n++; };
align_end  = '\\end{align}' @{n--; };
align_body = any+ - (align_begin|align_end);
align = '\\begin{align}' @{n=1;}  (align_begin|align_end|align_body)*    align_end  :> any when{!n};
alignat_begin = '\\begin{alignat}' @{n++; };
alignat_end  = '\\end{alignat}' @{n--; };
alignat_body = any+ - (alignat_begin|alignat_end);
alignat = '\\begin{alignat}' @{n=1;}  (alignat_begin|alignat_end|alignat_body)*    alignat_end  :> any when{!n};
aligned_begin = '\\begin{aligned}' @{n++; };
aligned_end  = '\\end{aligned}' @{n--; };
aligned_body = any+ - (aligned_begin|aligned_end);
aligned = '\\begin{aligned}' @{n=1;}  (aligned_begin|aligned_end|aligned_body)*    aligned_end  :> any when{!n};
alignedat_begin = '\\begin{alignedat}' @{n++; };
alignedat_end  = '\\end{alignedat}' @{n--; };
alignedat_body = any+ - (alignedat_begin|alignedat_end);
alignedat = '\\begin{alignedat}' @{n=1;}  (alignedat_begin|alignedat_end|alignedat_body)*    alignedat_end  :> any when{!n};
alltt_begin = '\\begin{alltt}' @{n++; };
alltt_end  = '\\end{alltt}' @{n--; };
alltt_body = any+ - (alltt_begin|alltt_end);
alltt = '\\begin{alltt}' @{n=1;}  (alltt_begin|alltt_end|alltt_body)*    alltt_end  :> any when{!n};
appendices_begin = '\\begin{appendices}' @{n++; };
appendices_end  = '\\end{appendices}' @{n--; };
appendices_body = any+ - (appendices_begin|appendices_end);
appendices = '\\begin{appendices}' @{n=1;}  (appendices_begin|appendices_end|appendices_body)*    appendices_end  :> any when{!n};
appendix_begin = '\\begin{appendix}' @{n++; };
appendix_end  = '\\end{appendix}' @{n--; };
appendix_body = any+ - (appendix_begin|appendix_end);
appendix = '\\begin{appendix}' @{n=1;}  (appendix_begin|appendix_end|appendix_body)*    appendix_end  :> any when{!n};
array_begin = '\\begin{array}' @{n++; };
array_end  = '\\end{array}' @{n--; };
array_body = any+ - (array_begin|array_end);
array = '\\begin{array}' @{n=1;}  (array_begin|array_end|array_body)*    array_end  :> any when{!n};
article_begin = '\\begin{article}' @{n++; };
article_end  = '\\end{article}' @{n--; };
article_body = any+ - (article_begin|article_end);
article = '\\begin{article}' @{n=1;}  (article_begin|article_end|article_body)*    article_end  :> any when{!n};
assumption_begin = '\\begin{assumption}' @{n++; };
assumption_end  = '\\end{assumption}' @{n--; };
assumption_body = any+ - (assumption_begin|assumption_end);
assumption = '\\begin{assumption}' @{n=1;}  (assumption_begin|assumption_end|assumption_body)*    assumption_end  :> any when{!n};
aug_begin = '\\begin{aug}' @{n++; };
aug_end  = '\\end{aug}' @{n--; };
aug_body = any+ - (aug_begin|aug_end);
aug = '\\begin{aug}' @{n=1;}  (aug_begin|aug_end|aug_body)*    aug_end  :> any when{!n};
axis_begin = '\\begin{axis}' @{n++; };
axis_end  = '\\end{axis}' @{n--; };
axis_body = any+ - (axis_begin|axis_end);
axis = '\\begin{axis}' @{n=1;}  (axis_begin|axis_end|axis_body)*    axis_end  :> any when{!n};
barticle_begin = '\\begin{barticle}' @{n++; };
barticle_end  = '\\end{barticle}' @{n--; };
barticle_body = any+ - (barticle_begin|barticle_end);
barticle = '\\begin{barticle}' @{n=1;}  (barticle_begin|barticle_end|barticle_body)*    barticle_end  :> any when{!n};
bbook_begin = '\\begin{bbook}' @{n++; };
bbook_end  = '\\end{bbook}' @{n--; };
bbook_body = any+ - (bbook_begin|bbook_end);
bbook = '\\begin{bbook}' @{n=1;}  (bbook_begin|bbook_end|bbook_body)*    bbook_end  :> any when{!n};
block_begin = '\\begin{block}' @{n++; };
block_end  = '\\end{block}' @{n--; };
block_body = any+ - (block_begin|block_end);
block = '\\begin{block}' @{n=1;}  (block_begin|block_end|block_body)*    block_end  :> any when{!n};
bmatrix_begin = '\\begin{bmatrix}' @{n++; };
bmatrix_end  = '\\end{bmatrix}' @{n--; };
bmatrix_body = any+ - (bmatrix_begin|bmatrix_end);
bmatrix = '\\begin{bmatrix}' @{n=1;}  (bmatrix_begin|bmatrix_end|bmatrix_body)*    bmatrix_end  :> any when{!n};
bmisc_begin = '\\begin{bmisc}' @{n++; };
bmisc_end  = '\\end{bmisc}' @{n--; };
bmisc_body = any+ - (bmisc_begin|bmisc_end);
bmisc = '\\begin{bmisc}' @{n=1;}  (bmisc_begin|bmisc_end|bmisc_body)*    bmisc_end  :> any when{!n};
case_begin = '\\begin{case}' @{n++; };
case_end  = '\\end{case}' @{n--; };
case_body = any+ - (case_begin|case_end);
case = '\\begin{case}' @{n=1;}  (case_begin|case_end|case_body)*    case_end  :> any when{!n};
cases_begin = '\\begin{cases}' @{n++; };
cases_end  = '\\end{cases}' @{n--; };
cases_body = any+ - (cases_begin|cases_end);
cases = '\\begin{cases}' @{n=1;}  (cases_begin|cases_end|cases_body)*    cases_end  :> any when{!n};
center_begin = '\\begin{center}' @{n++; };
center_end  = '\\end{center}' @{n--; };
center_body = any+ - (center_begin|center_end);
center = '\\begin{center}' @{n=1;}  (center_begin|center_end|center_body)*    center_end  :> any when{!n};
centering_begin = '\\begin{centering}' @{n++; };
centering_end  = '\\end{centering}' @{n--; };
centering_body = any+ - (centering_begin|centering_end);
centering = '\\begin{centering}' @{n=1;}  (centering_begin|centering_end|centering_body)*    centering_end  :> any when{!n};
claim_begin = '\\begin{claim}' @{n++; };
claim_end  = '\\end{claim}' @{n--; };
claim_body = any+ - (claim_begin|claim_end);
claim = '\\begin{claim}' @{n=1;}  (claim_begin|claim_end|claim_body)*    claim_end  :> any when{!n};
code_begin = '\\begin{code}' @{n++; };
code_end  = '\\end{code}' @{n--; };
code_body = any+ - (code_begin|code_end);
code = '\\begin{code}' @{n=1;}  (code_begin|code_end|code_body)*    code_end  :> any when{!n};
compactenum_begin = '\\begin{compactenum}' @{n++; };
compactenum_end  = '\\end{compactenum}' @{n--; };
compactenum_body = any+ - (compactenum_begin|compactenum_end);
compactenum = '\\begin{compactenum}' @{n=1;}  (compactenum_begin|compactenum_end|compactenum_body)*    compactenum_end  :> any when{!n};
compactitem_begin = '\\begin{compactitem}' @{n++; };
compactitem_end  = '\\end{compactitem}' @{n--; };
compactitem_body = any+ - (compactitem_begin|compactitem_end);
compactitem = '\\begin{compactitem}' @{n=1;}  (compactitem_begin|compactitem_end|compactitem_body)*    compactitem_end  :> any when{!n};
conj_begin = '\\begin{conj}' @{n++; };
conj_end  = '\\end{conj}' @{n--; };
conj_body = any+ - (conj_begin|conj_end);
conj = '\\begin{conj}' @{n=1;}  (conj_begin|conj_end|conj_body)*    conj_end  :> any when{!n};
conjecture_begin = '\\begin{conjecture}' @{n++; };
conjecture_end  = '\\end{conjecture}' @{n--; };
conjecture_body = any+ - (conjecture_begin|conjecture_end);
conjecture = '\\begin{conjecture}' @{n=1;}  (conjecture_begin|conjecture_end|conjecture_body)*    conjecture_end  :> any when{!n};
cor_begin = '\\begin{cor}' @{n++; };
cor_end  = '\\end{cor}' @{n--; };
cor_body = any+ - (cor_begin|cor_end);
cor = '\\begin{cor}' @{n=1;}  (cor_begin|cor_end|cor_body)*    cor_end  :> any when{!n};
coro_begin = '\\begin{coro}' @{n++; };
coro_end  = '\\end{coro}' @{n--; };
coro_body = any+ - (coro_begin|coro_end);
coro = '\\begin{coro}' @{n=1;}  (coro_begin|coro_end|coro_body)*    coro_end  :> any when{!n};
corollary_begin = '\\begin{corollary}' @{n++; };
corollary_end  = '\\end{corollary}' @{n--; };
corollary_body = any+ - (corollary_begin|corollary_end);
corollary = '\\begin{corollary}' @{n=1;}  (corollary_begin|corollary_end|corollary_body)*    corollary_end  :> any when{!n};
dcases_begin = '\\begin{dcases}' @{n++; };
dcases_end  = '\\end{dcases}' @{n--; };
dcases_body = any+ - (dcases_begin|dcases_end);
dcases = '\\begin{dcases}' @{n=1;}  (dcases_begin|dcases_end|dcases_body)*    dcases_end  :> any when{!n};
defi_begin = '\\begin{defi}' @{n++; };
defi_end  = '\\end{defi}' @{n--; };
defi_body = any+ - (defi_begin|defi_end);
defi = '\\begin{defi}' @{n=1;}  (defi_begin|defi_end|defi_body)*    defi_end  :> any when{!n};
defin_begin = '\\begin{defin}' @{n++; };
defin_end  = '\\end{defin}' @{n--; };
defin_body = any+ - (defin_begin|defin_end);
defin = '\\begin{defin}' @{n=1;}  (defin_begin|defin_end|defin_body)*    defin_end  :> any when{!n};
definition_begin = '\\begin{definition}' @{n++; };
definition_end  = '\\end{definition}' @{n--; };
definition_body = any+ - (definition_begin|definition_end);
definition = '\\begin{definition}' @{n=1;}  (definition_begin|definition_end|definition_body)*    definition_end  :> any when{!n};
defn_begin = '\\begin{defn}' @{n++; };
defn_end  = '\\end{defn}' @{n--; };
defn_body = any+ - (defn_begin|defn_end);
defn = '\\begin{defn}' @{n=1;}  (defn_begin|defn_end|defn_body)*    defn_end  :> any when{!n};
deluxetable_begin = '\\begin{deluxetable}' @{n++; };
deluxetable_end  = '\\end{deluxetable}' @{n--; };
deluxetable_body = any+ - (deluxetable_begin|deluxetable_end);
deluxetable = '\\begin{deluxetable}' @{n=1;}  (deluxetable_begin|deluxetable_end|deluxetable_body)*    deluxetable_end  :> any when{!n};
demo_begin = '\\begin{demo}' @{n++; };
demo_end  = '\\end{demo}' @{n--; };
demo_body = any+ - (demo_begin|demo_end);
demo = '\\begin{demo}' @{n=1;}  (demo_begin|demo_end|demo_body)*    demo_end  :> any when{!n};
description_begin = '\\begin{description}' @{n++; };
description_end  = '\\end{description}' @{n--; };
description_body = any+ - (description_begin|description_end);
description = '\\begin{description}' @{n=1;}  (description_begin|description_end|description_body)*    description_end  :> any when{!n};
df_begin = '\\begin{df}' @{n++; };
df_end  = '\\end{df}' @{n--; };
df_body = any+ - (df_begin|df_end);
df = '\\begin{df}' @{n=1;}  (df_begin|df_end|df_body)*    df_end  :> any when{!n};
dfn_begin = '\\begin{dfn}' @{n++; };
dfn_end  = '\\end{dfn}' @{n--; };
dfn_body = any+ - (dfn_begin|dfn_end);
dfn = '\\begin{dfn}' @{n=1;}  (dfn_begin|dfn_end|dfn_body)*    dfn_end  :> any when{!n};
diagram_begin = '\\begin{diagram}' @{n++; };
diagram_end  = '\\end{diagram}' @{n--; };
diagram_body = any+ - (diagram_begin|diagram_end);
diagram = '\\begin{diagram}' @{n=1;}  (diagram_begin|diagram_end|diagram_body)*    diagram_end  :> any when{!n};
displaymath_begin = '\\begin{displaymath}' @{n++; };
displaymath_end  = '\\end{displaymath}' @{n--; };
displaymath_body = any+ - (displaymath_begin|displaymath_end);
displaymath = '\\begin{displaymath}' @{n=1;}  (displaymath_begin|displaymath_end|displaymath_body)*    displaymath_end  :> any when{!n};
document_begin = '\\begin{document}' @{n++; };
document_end  = '\\end{document}' @{n--; };
document_body = any+ - (document_begin|document_end);
document = '\\begin{document}' @{n=1;}  (document_begin|document_end|document_body)*    document_end  :> any when{!n};
eg_begin = '\\begin{eg}' @{n++; };
eg_end  = '\\end{eg}' @{n--; };
eg_body = any+ - (eg_begin|eg_end);
eg = '\\begin{eg}' @{n=1;}  (eg_begin|eg_end|eg_body)*    eg_end  :> any when{!n};
enumerate_begin = '\\begin{enumerate}' @{n++; };
enumerate_end  = '\\end{enumerate}' @{n--; };
enumerate_body = any+ - (enumerate_begin|enumerate_end);
enumerate = '\\begin{enumerate}' @{n=1;}  (enumerate_begin|enumerate_end|enumerate_body)*    enumerate_end  :> any when{!n};
eqnarray_begin = '\\begin{eqnarray}' @{n++; };
eqnarray_end  = '\\end{eqnarray}' @{n--; };
eqnarray_body = any+ - (eqnarray_begin|eqnarray_end);
eqnarray = '\\begin{eqnarray}' @{n=1;}  (eqnarray_begin|eqnarray_end|eqnarray_body)*    eqnarray_end  :> any when{!n};
equ_begin = '\\begin{equ}' @{n++; };
equ_end  = '\\end{equ}' @{n--; };
equ_body = any+ - (equ_begin|equ_end);
equ = '\\begin{equ}' @{n=1;}  (equ_begin|equ_end|equ_body)*    equ_end  :> any when{!n};

equation_begin_idx = '\\begin{equation}' @{n++; };
equation_end_idx  = '\\end{equation}' @{n--; };
equation_body_idx = any+ - (equation_begin_idx|equation_end_idx);
equation_idx = '\\begin{equation}' @{n=1; }  (equation_begin_idx|equation_end_idx|equation_body_idx)*    equation_end_idx  :> any when{!n};


equation_begin = '\\begin{equation*}' @{n++; };
equation_end  = '\\end{equation*}' @{n--; };
equation_body = any+ - (equation_begin|equation_end);
equation_ = '\\begin{equation*}' @{n=1; }  (equation_begin|equation_end|equation_body)*    equation_end  :> any when{!n};

equation = equation_ | equation_idx;



equs_begin = '\\begin{equs}' @{n++; };
equs_end  = '\\end{equs}' @{n--; };
equs_body = any+ - (equs_begin|equs_end);
equs = '\\begin{equs}' @{n=1;}  (equs_begin|equs_end|equs_body)*    equs_end  :> any when{!n};
ex_begin = '\\begin{ex}' @{n++; };
ex_end  = '\\end{ex}' @{n--; };
ex_body = any+ - (ex_begin|ex_end);
ex = '\\begin{ex}' @{n=1;}  (ex_begin|ex_end|ex_body)*    ex_end  :> any when{!n};
exa_begin = '\\begin{exa}' @{n++; };
exa_end  = '\\end{exa}' @{n--; };
exa_body = any+ - (exa_begin|exa_end);
exa = '\\begin{exa}' @{n=1;}  (exa_begin|exa_end|exa_body)*    exa_end  :> any when{!n};
exam_begin = '\\begin{exam}' @{n++; };
exam_end  = '\\end{exam}' @{n--; };
exam_body = any+ - (exam_begin|exam_end);
exam = '\\begin{exam}' @{n=1;}  (exam_begin|exam_end|exam_body)*    exam_end  :> any when{!n};
example_begin = '\\begin{example}' @{n++; };
example_end  = '\\end{example}' @{n--; };
example_body = any+ - (example_begin|example_end);
example = '\\begin{example}' @{n=1;}  (example_begin|example_end|example_body)*    example_end  :> any when{!n};
exercise_begin = '\\begin{exercise}' @{n++; };
exercise_end  = '\\end{exercise}' @{n--; };
exercise_body = any+ - (exercise_begin|exercise_end);
exercise = '\\begin{exercise}' @{n=1;}  (exercise_begin|exercise_end|exercise_body)*    exercise_end  :> any when{!n};
exmp_begin = '\\begin{exmp}' @{n++; };
exmp_end  = '\\end{exmp}' @{n--; };
exmp_body = any+ - (exmp_begin|exmp_end);
exmp = '\\begin{exmp}' @{n=1;}  (exmp_begin|exmp_end|exmp_body)*    exmp_end  :> any when{!n};
fact_begin = '\\begin{fact}' @{n++; };
fact_end  = '\\end{fact}' @{n--; };
fact_body = any+ - (fact_begin|fact_end);
fact = '\\begin{fact}' @{n=1;}  (fact_begin|fact_end|fact_body)*    fact_end  :> any when{!n};
figure_begin = '\\begin{figure}' @{n++; };
figure_end  = '\\end{figure}' @{n--; };
figure_body = any+ - (figure_begin|figure_end);
figure = '\\begin{figure}' @{n=1;}  (figure_begin|figure_end|figure_body)*    figure_end  :> any when{!n};
filecontents_begin = '\\begin{filecontents}' @{n++; };
filecontents_end  = '\\end{filecontents}' @{n--; };
filecontents_body = any+ - (filecontents_begin|filecontents_end);
filecontents = '\\begin{filecontents}' @{n=1;}  (filecontents_begin|filecontents_end|filecontents_body)*    filecontents_end  :> any when{!n};
flalign_begin = '\\begin{flalign}' @{n++; };
flalign_end  = '\\end{flalign}' @{n--; };
flalign_body = any+ - (flalign_begin|flalign_end);
flalign = '\\begin{flalign}' @{n=1;}  (flalign_begin|flalign_end|flalign_body)*    flalign_end  :> any when{!n};
flushleft_begin = '\\begin{flushleft}' @{n++; };
flushleft_end  = '\\end{flushleft}' @{n--; };
flushleft_body = any+ - (flushleft_begin|flushleft_end);
flushleft = '\\begin{flushleft}' @{n=1;}  (flushleft_begin|flushleft_end|flushleft_body)*    flushleft_end  :> any when{!n};
flushright_begin = '\\begin{flushright}' @{n++; };
flushright_end  = '\\end{flushright}' @{n--; };
flushright_body = any+ - (flushright_begin|flushright_end);
flushright = '\\begin{flushright}' @{n=1;}  (flushright_begin|flushright_end|flushright_body)*    flushright_end  :> any when{!n};
fmffile_begin = '\\begin{fmffile}' @{n++; };
fmffile_end  = '\\end{fmffile}' @{n--; };
fmffile_body = any+ - (fmffile_begin|fmffile_end);
fmffile = '\\begin{fmffile}' @{n=1;}  (fmffile_begin|fmffile_end|fmffile_body)*    fmffile_end  :> any when{!n};
fmfgraph_begin = '\\begin{fmfgraph}' @{n++; };
fmfgraph_end  = '\\end{fmfgraph}' @{n--; };
fmfgraph_body = any+ - (fmfgraph_begin|fmfgraph_end);
fmfgraph = '\\begin{fmfgraph}' @{n=1;}  (fmfgraph_begin|fmfgraph_end|fmfgraph_body)*    fmfgraph_end  :> any when{!n};
footnotesize_begin = '\\begin{footnotesize}' @{n++; };
footnotesize_end  = '\\end{footnotesize}' @{n--; };
footnotesize_body = any+ - (footnotesize_begin|footnotesize_end);
footnotesize = '\\begin{footnotesize}' @{n=1;}  (footnotesize_begin|footnotesize_end|footnotesize_body)*    footnotesize_end  :> any when{!n};
frame_begin = '\\begin{frame}' @{n++; };
frame_end  = '\\end{frame}' @{n--; };
frame_body = any+ - (frame_begin|frame_end);
frame = '\\begin{frame}' @{n=1;}  (frame_begin|frame_end|frame_body)*    frame_end  :> any when{!n};
framed_begin = '\\begin{framed}' @{n++; };
framed_end  = '\\end{framed}' @{n--; };
framed_body = any+ - (framed_begin|framed_end);
framed = '\\begin{framed}' @{n=1;}  (framed_begin|framed_end|framed_body)*    framed_end  :> any when{!n};
frontmatter_begin = '\\begin{frontmatter}' @{n++; };
frontmatter_end  = '\\end{frontmatter}' @{n--; };
frontmatter_body = any+ - (frontmatter_begin|frontmatter_end);
frontmatter = '\\begin{frontmatter}' @{n=1;}  (frontmatter_begin|frontmatter_end|frontmatter_body)*    frontmatter_end  :> any when{!n};
gather_begin = '\\begin{gather}' @{n++; };
gather_end  = '\\end{gather}' @{n--; };
gather_body = any+ - (gather_begin|gather_end);
gather = '\\begin{gather}' @{n=1;}  (gather_begin|gather_end|gather_body)*    gather_end  :> any when{!n};
gathered_begin = '\\begin{gathered}' @{n++; };
gathered_end  = '\\end{gathered}' @{n--; };
gathered_body = any+ - (gathered_begin|gathered_end);
gathered = '\\begin{gathered}' @{n=1;}  (gathered_begin|gathered_end|gathered_body)*    gathered_end  :> any when{!n};
indented_begin = '\\begin{indented}' @{n++; };
indented_end  = '\\end{indented}' @{n--; };
indented_body = any+ - (indented_begin|indented_end);
indented = '\\begin{indented}' @{n=1;}  (indented_begin|indented_end|indented_body)*    indented_end  :> any when{!n};
inparaenum_begin = '\\begin{inparaenum}' @{n++; };
inparaenum_end  = '\\end{inparaenum}' @{n--; };
inparaenum_body = any+ - (inparaenum_begin|inparaenum_end);
inparaenum = '\\begin{inparaenum}' @{n=1;}  (inparaenum_begin|inparaenum_end|inparaenum_body)*    inparaenum_end  :> any when{!n};
itemize_begin = '\\begin{itemize}' @{n++; };
itemize_end  = '\\end{itemize}' @{n--; };
itemize_body = any+ - (itemize_begin|itemize_end);
itemize = '\\begin{itemize}' @{n=1;}  (itemize_begin|itemize_end|itemize_body)*    itemize_end  :> any when{!n};
keyword_begin = '\\begin{keyword}' @{n++; };
keyword_end  = '\\end{keyword}' @{n--; };
keyword_body = any+ - (keyword_begin|keyword_end);
keyword = '\\begin{keyword}' @{n=1;}  (keyword_begin|keyword_end|keyword_body)*    keyword_end  :> any when{!n};
keywords_begin = '\\begin{keywords}' @{n++; };
keywords_end  = '\\end{keywords}' @{n--; };
keywords_body = any+ - (keywords_begin|keywords_end);
keywords = '\\begin{keywords}' @{n=1;}  (keywords_begin|keywords_end|keywords_body)*    keywords_end  :> any when{!n};
landscape_begin = '\\begin{landscape}' @{n++; };
landscape_end  = '\\end{landscape}' @{n--; };
landscape_body = any+ - (landscape_begin|landscape_end);
landscape = '\\begin{landscape}' @{n=1;}  (landscape_begin|landscape_end|landscape_body)*    landscape_end  :> any when{!n};
large_begin = '\\begin{large}' @{n++; };
large_end  = '\\end{large}' @{n--; };
large_body = any+ - (large_begin|large_end);
large = '\\begin{large}' @{n=1;}  (large_begin|large_end|large_body)*    large_end  :> any when{!n};
lem_begin = '\\begin{lem}' @{n++; };
lem_end  = '\\end{lem}' @{n--; };
lem_body = any+ - (lem_begin|lem_end);
lem = '\\begin{lem}' @{n=1;}  (lem_begin|lem_end|lem_body)*    lem_end  :> any when{!n};
lema_begin = '\\begin{lema}' @{n++; };
lema_end  = '\\end{lema}' @{n--; };
lema_body = any+ - (lema_begin|lema_end);
lema = '\\begin{lema}' @{n=1;}  (lema_begin|lema_end|lema_body)*    lema_end  :> any when{!n};
lemm_begin = '\\begin{lemm}' @{n++; };
lemm_end  = '\\end{lemm}' @{n--; };
lemm_body = any+ - (lemm_begin|lemm_end);
lemm = '\\begin{lemm}' @{n=1;}  (lemm_begin|lemm_end|lemm_body)*    lemm_end  :> any when{!n};
lemma_begin = '\\begin{lemma}' @{n++; };
lemma_end  = '\\end{lemma}' @{n--; };
lemma_body = any+ - (lemma_begin|lemma_end);
lemma = '\\begin{lemma}' @{n=1;}  (lemma_begin|lemma_end|lemma_body)*    lemma_end  :> any when{!n};
lemme_begin = '\\begin{lemme}' @{n++; };
lemme_end  = '\\end{lemme}' @{n--; };
lemme_body = any+ - (lemme_begin|lemme_end);
lemme = '\\begin{lemme}' @{n=1;}  (lemme_begin|lemme_end|lemme_body)*    lemme_end  :> any when{!n};
linenomath_begin = '\\begin{linenomath}' @{n++; };
linenomath_end  = '\\end{linenomath}' @{n--; };
linenomath_body = any+ - (linenomath_begin|linenomath_end);
linenomath = '\\begin{linenomath}' @{n=1;}  (linenomath_begin|linenomath_end|linenomath_body)*    linenomath_end  :> any when{!n};
linenumbers_begin = '\\begin{linenumbers}' @{n++; };
linenumbers_end  = '\\end{linenumbers}' @{n--; };
linenumbers_body = any+ - (linenumbers_begin|linenumbers_end);
linenumbers = '\\begin{linenumbers}' @{n=1;}  (linenumbers_begin|linenumbers_end|linenumbers_body)*    linenumbers_end  :> any when{!n};
list_begin = '\\begin{list}' @{n++; };
list_end  = '\\end{list}' @{n--; };
list_body = any+ - (list_begin|list_end);
list = '\\begin{list}' @{n=1;}  (list_begin|list_end|list_body)*    list_end  :> any when{!n};
lm_begin = '\\begin{lm}' @{n++; };
lm_end  = '\\end{lm}' @{n--; };
lm_body = any+ - (lm_begin|lm_end);
lm = '\\begin{lm}' @{n=1;}  (lm_begin|lm_end|lm_body)*    lm_end  :> any when{!n};
longlist_begin = '\\begin{longlist}' @{n++; };
longlist_end  = '\\end{longlist}' @{n--; };
longlist_body = any+ - (longlist_begin|longlist_end);
longlist = '\\begin{longlist}' @{n=1;}  (longlist_begin|longlist_end|longlist_body)*    longlist_end  :> any when{!n};
longtable_begin = '\\begin{longtable}' @{n++; };
longtable_end  = '\\end{longtable}' @{n--; };
longtable_body = any+ - (longtable_begin|longtable_end);
longtable = '\\begin{longtable}' @{n=1;}  (longtable_begin|longtable_end|longtable_body)*    longtable_end  :> any when{!n};
lrbox_begin = '\\begin{lrbox}' @{n++; };
lrbox_end  = '\\end{lrbox}' @{n--; };
lrbox_body = any+ - (lrbox_begin|lrbox_end);
lrbox = '\\begin{lrbox}' @{n=1;}  (lrbox_begin|lrbox_end|lrbox_body)*    lrbox_end  :> any when{!n};
lstlisting_begin = '\\begin{lstlisting}' @{n++; };
lstlisting_end  = '\\end{lstlisting}' @{n--; };
lstlisting_body = any+ - (lstlisting_begin|lstlisting_end);
lstlisting = '\\begin{lstlisting}' @{n=1;}  (lstlisting_begin|lstlisting_end|lstlisting_body)*    lstlisting_end  :> any when{!n};
mapleinput_begin = '\\begin{mapleinput}' @{n++; };
mapleinput_end  = '\\end{mapleinput}' @{n--; };
mapleinput_body = any+ - (mapleinput_begin|mapleinput_end);
mapleinput = '\\begin{mapleinput}' @{n=1;}  (mapleinput_begin|mapleinput_end|mapleinput_body)*    mapleinput_end  :> any when{!n};
maplelatex_begin = '\\begin{maplelatex}' @{n++; };
maplelatex_end  = '\\end{maplelatex}' @{n--; };
maplelatex_body = any+ - (maplelatex_begin|maplelatex_end);
maplelatex = '\\begin{maplelatex}' @{n=1;}  (maplelatex_begin|maplelatex_end|maplelatex_body)*    maplelatex_end  :> any when{!n};
math_begin = '\\begin{math}' @{n++; };
math_end  = '\\end{math}' @{n--; };
math_body = any+ - (math_begin|math_end);
math = '\\begin{math}' @{n=1;}  (math_begin|math_end|math_body)*    math_end  :> any when{!n};
mathletters_begin = '\\begin{mathletters}' @{n++; };
mathletters_end  = '\\end{mathletters}' @{n--; };
mathletters_body = any+ - (mathletters_begin|mathletters_end);
mathletters = '\\begin{mathletters}' @{n=1;}  (mathletters_begin|mathletters_end|mathletters_body)*    mathletters_end  :> any when{!n};
mathpar_begin = '\\begin{mathpar}' @{n++; };
mathpar_end  = '\\end{mathpar}' @{n--; };
mathpar_body = any+ - (mathpar_begin|mathpar_end);
mathpar = '\\begin{mathpar}' @{n=1;}  (mathpar_begin|mathpar_end|mathpar_body)*    mathpar_end  :> any when{!n};
matrix_begin = '\\begin{matrix}' @{n++; };
matrix_end  = '\\end{matrix}' @{n--; };
matrix_body = any+ - (matrix_begin|matrix_end);
matrix = '\\begin{matrix}' @{n=1;}  (matrix_begin|matrix_end|matrix_body)*    matrix_end  :> any when{!n};
minipage_begin = '\\begin{minipage}' @{n++; };
minipage_end  = '\\end{minipage}' @{n--; };
minipage_body = any+ - (minipage_begin|minipage_end);
minipage = '\\begin{minipage}' @{n=1;}  (minipage_begin|minipage_end|minipage_body)*    minipage_end  :> any when{!n};
multicols_begin = '\\begin{multicols}' @{n++; };
multicols_end  = '\\end{multicols}' @{n--; };
multicols_body = any+ - (multicols_begin|multicols_end);
multicols = '\\begin{multicols}' @{n=1;}  (multicols_begin|multicols_end|multicols_body)*    multicols_end  :> any when{!n};
multline_begin = '\\begin{multline}' @{n++; };
multline_end  = '\\end{multline}' @{n--; };
multline_body = any+ - (multline_begin|multline_end);
multline = '\\begin{multline}' @{n=1;}  (multline_begin|multline_end|multline_body)*    multline_end  :> any when{!n};
multlined_begin = '\\begin{multlined}' @{n++; };
multlined_end  = '\\end{multlined}' @{n--; };
multlined_body = any+ - (multlined_begin|multlined_end);
multlined = '\\begin{multlined}' @{n=1;}  (multlined_begin|multlined_end|multlined_body)*    multlined_end  :> any when{!n};
mydef_begin = '\\begin{mydef}' @{n++; };
mydef_end  = '\\end{mydef}' @{n--; };
mydef_body = any+ - (mydef_begin|mydef_end);
mydef = '\\begin{mydef}' @{n=1;}  (mydef_begin|mydef_end|mydef_body)*    mydef_end  :> any when{!n};
notation_begin = '\\begin{notation}' @{n++; };
notation_end  = '\\end{notation}' @{n--; };
notation_body = any+ - (notation_begin|notation_end);
notation = '\\begin{notation}' @{n=1;}  (notation_begin|notation_end|notation_body)*    notation_end  :> any when{!n};
note_begin = '\\begin{note}' @{n++; };
note_end  = '\\end{note}' @{n--; };
note_body = any+ - (note_begin|note_end);
note = '\\begin{note}' @{n=1;}  (note_begin|note_end|note_body)*    note_end  :> any when{!n};
obs_begin = '\\begin{obs}' @{n++; };
obs_end  = '\\end{obs}' @{n--; };
obs_body = any+ - (obs_begin|obs_end);
obs = '\\begin{obs}' @{n=1;}  (obs_begin|obs_end|obs_body)*    obs_end  :> any when{!n};
observation_begin = '\\begin{observation}' @{n++; };
observation_end  = '\\end{observation}' @{n--; };
observation_body = any+ - (observation_begin|observation_end);
observation = '\\begin{observation}' @{n=1;}  (observation_begin|observation_end|observation_body)*    observation_end  :> any when{!n};
opening_begin = '\\begin{opening}' @{n++; };
opening_end  = '\\end{opening}' @{n--; };
opening_body = any+ - (opening_begin|opening_end);
opening = '\\begin{opening}' @{n=1;}  (opening_begin|opening_end|opening_body)*    opening_end  :> any when{!n};
overpic_begin = '\\begin{overpic}' @{n++; };
overpic_end  = '\\end{overpic}' @{n--; };
overpic_body = any+ - (overpic_begin|overpic_end);
overpic = '\\begin{overpic}' @{n=1;}  (overpic_begin|overpic_end|overpic_body)*    overpic_end  :> any when{!n};
pf_begin = '\\begin{pf}' @{n++; };
pf_end  = '\\end{pf}' @{n--; };
pf_body = any+ - (pf_begin|pf_end);
pf = '\\begin{pf}' @{n=1;}  (pf_begin|pf_end|pf_body)*    pf_end  :> any when{!n};
pgfonlayer_begin = '\\begin{pgfonlayer}' @{n++; };
pgfonlayer_end  = '\\end{pgfonlayer}' @{n--; };
pgfonlayer_body = any+ - (pgfonlayer_begin|pgfonlayer_end);
pgfonlayer = '\\begin{pgfonlayer}' @{n=1;}  (pgfonlayer_begin|pgfonlayer_end|pgfonlayer_body)*    pgfonlayer_end  :> any when{!n};
pgfscope_begin = '\\begin{pgfscope}' @{n++; };
pgfscope_end  = '\\end{pgfscope}' @{n--; };
pgfscope_body = any+ - (pgfscope_begin|pgfscope_end);
pgfscope = '\\begin{pgfscope}' @{n=1;}  (pgfscope_begin|pgfscope_end|pgfscope_body)*    pgfscope_end  :> any when{!n};
picture_begin = '\\begin{picture}' @{n++; };
picture_end  = '\\end{picture}' @{n--; };
picture_body = any+ - (picture_begin|picture_end);
picture = '\\begin{picture}' @{n=1;}  (picture_begin|picture_end|picture_body)*    picture_end  :> any when{!n};
pmatrix_begin = '\\begin{pmatrix}' @{n++; };
pmatrix_end  = '\\end{pmatrix}' @{n--; };
pmatrix_body = any+ - (pmatrix_begin|pmatrix_end);
pmatrix = '\\begin{pmatrix}' @{n=1;}  (pmatrix_begin|pmatrix_end|pmatrix_body)*    pmatrix_end  :> any when{!n};
pr_begin = '\\begin{pr}' @{n++; };
pr_end  = '\\end{pr}' @{n--; };
pr_body = any+ - (pr_begin|pr_end);
pr = '\\begin{pr}' @{n=1;}  (pr_begin|pr_end|pr_body)*    pr_end  :> any when{!n};
prf_begin = '\\begin{prf}' @{n++; };
prf_end  = '\\end{prf}' @{n--; };
prf_body = any+ - (prf_begin|prf_end);
prf = '\\begin{prf}' @{n=1;}  (prf_begin|prf_end|prf_body)*    prf_end  :> any when{!n};
pro_begin = '\\begin{pro}' @{n++; };
pro_end  = '\\end{pro}' @{n--; };
pro_body = any+ - (pro_begin|pro_end);
pro = '\\begin{pro}' @{n=1;}  (pro_begin|pro_end|pro_body)*    pro_end  :> any when{!n};
prob_begin = '\\begin{prob}' @{n++; };
prob_end  = '\\end{prob}' @{n--; };
prob_body = any+ - (prob_begin|prob_end);
prob = '\\begin{prob}' @{n=1;}  (prob_begin|prob_end|prob_body)*    prob_end  :> any when{!n};
problem_begin = '\\begin{problem}' @{n++; };
problem_end  = '\\end{problem}' @{n--; };
problem_body = any+ - (problem_begin|problem_end);
problem = '\\begin{problem}' @{n=1;}  (problem_begin|problem_end|problem_body)*    problem_end  :> any when{!n};
proof_begin = '\\begin{proof}' @{n++; };
proof_end  = '\\end{proof}' @{n--; };
proof_body = any+ - (proof_begin|proof_end);
proof = '\\begin{proof}' @{n=1;}  (proof_begin|proof_end|proof_body)*    proof_end  :> any when{!n};
proofof_begin = '\\begin{proofof}' @{n++; };
proofof_end  = '\\end{proofof}' @{n--; };
proofof_body = any+ - (proofof_begin|proofof_end);
proofof = '\\begin{proofof}' @{n=1;}  (proofof_begin|proofof_end|proofof_body)*    proofof_end  :> any when{!n};
prooftree_begin = '\\begin{prooftree}' @{n++; };
prooftree_end  = '\\end{prooftree}' @{n--; };
prooftree_body = any+ - (prooftree_begin|prooftree_end);
prooftree = '\\begin{prooftree}' @{n=1;}  (prooftree_begin|prooftree_end|prooftree_body)*    prooftree_end  :> any when{!n};
prop_begin = '\\begin{prop}' @{n++; };
prop_end  = '\\end{prop}' @{n--; };
prop_body = any+ - (prop_begin|prop_end);
prop = '\\begin{prop}' @{n=1;}  (prop_begin|prop_end|prop_body)*    prop_end  :> any when{!n};
property_begin = '\\begin{property}' @{n++; };
property_end  = '\\end{property}' @{n--; };
property_body = any+ - (property_begin|property_end);
property = '\\begin{property}' @{n=1;}  (property_begin|property_end|property_body)*    property_end  :> any when{!n};
propo_begin = '\\begin{propo}' @{n++; };
propo_end  = '\\end{propo}' @{n--; };
propo_body = any+ - (propo_begin|propo_end);
propo = '\\begin{propo}' @{n=1;}  (propo_begin|propo_end|propo_body)*    propo_end  :> any when{!n};
proposition_begin = '\\begin{proposition}' @{n++; };
proposition_end  = '\\end{proposition}' @{n--; };
proposition_body = any+ - (proposition_begin|proposition_end);
proposition = '\\begin{proposition}' @{n=1;}  (proposition_begin|proposition_end|proposition_body)*    proposition_end  :> any when{!n};
prp_begin = '\\begin{prp}' @{n++; };
prp_end  = '\\end{prp}' @{n--; };
prp_body = any+ - (prp_begin|prp_end);
prp = '\\begin{prp}' @{n=1;}  (prp_begin|prp_end|prp_body)*    prp_end  :> any when{!n};
psfrags_begin = '\\begin{psfrags}' @{n++; };
psfrags_end  = '\\end{psfrags}' @{n--; };
psfrags_body = any+ - (psfrags_begin|psfrags_end);
psfrags = '\\begin{psfrags}' @{n=1;}  (psfrags_begin|psfrags_end|psfrags_body)*    psfrags_end  :> any when{!n};
pspicture_begin = '\\begin{pspicture}' @{n++; };
pspicture_end  = '\\end{pspicture}' @{n--; };
pspicture_body = any+ - (pspicture_begin|pspicture_end);
pspicture = '\\begin{pspicture}' @{n=1;}  (pspicture_begin|pspicture_end|pspicture_body)*    pspicture_end  :> any when{!n};
question_begin = '\\begin{question}' @{n++; };
question_end  = '\\end{question}' @{n--; };
question_body = any+ - (question_begin|question_end);
question = '\\begin{question}' @{n=1;}  (question_begin|question_end|question_body)*    question_end  :> any when{!n};
quotation_begin = '\\begin{quotation}' @{n++; };
quotation_end  = '\\end{quotation}' @{n--; };
quotation_body = any+ - (quotation_begin|quotation_end);
quotation = '\\begin{quotation}' @{n=1;}  (quotation_begin|quotation_end|quotation_body)*    quotation_end  :> any when{!n};
quote_begin = '\\begin{quote}' @{n++; };
quote_end  = '\\end{quote}' @{n--; };
quote_body = any+ - (quote_begin|quote_end);
quote = '\\begin{quote}' @{n=1;}  (quote_begin|quote_end|quote_body)*    quote_end  :> any when{!n};
references_begin = '\\begin{references}' @{n++; };
references_end  = '\\end{references}' @{n--; };
references_body = any+ - (references_begin|references_end);
references = '\\begin{references}' @{n=1;}  (references_begin|references_end|references_body)*    references_end  :> any when{!n};
rem_begin = '\\begin{rem}' @{n++; };
rem_end  = '\\end{rem}' @{n--; };
rem_body = any+ - (rem_begin|rem_end);
rem = '\\begin{rem}' @{n=1;}  (rem_begin|rem_end|rem_body)*    rem_end  :> any when{!n};
rema_begin = '\\begin{rema}' @{n++; };
rema_end  = '\\end{rema}' @{n--; };
rema_body = any+ - (rema_begin|rema_end);
rema = '\\begin{rema}' @{n=1;}  (rema_begin|rema_end|rema_body)*    rema_end  :> any when{!n};
remark_begin = '\\begin{remark}' @{n++; };
remark_end  = '\\end{remark}' @{n--; };
remark_body = any+ - (remark_begin|remark_end);
remark = '\\begin{remark}' @{n=1;}  (remark_begin|remark_end|remark_body)*    remark_end  :> any when{!n};
restatable_begin = '\\begin{restatable}' @{n++; };
restatable_end  = '\\end{restatable}' @{n--; };
restatable_body = any+ - (restatable_begin|restatable_end);
restatable = '\\begin{restatable}' @{n=1;}  (restatable_begin|restatable_end|restatable_body)*    restatable_end  :> any when{!n};
rmk_begin = '\\begin{rmk}' @{n++; };
rmk_end  = '\\end{rmk}' @{n--; };
rmk_body = any+ - (rmk_begin|rmk_end);
rmk = '\\begin{rmk}' @{n=1;}  (rmk_begin|rmk_end|rmk_body)*    rmk_end  :> any when{!n};
rotate_begin = '\\begin{rotate}' @{n++; };
rotate_end  = '\\end{rotate}' @{n--; };
rotate_body = any+ - (rotate_begin|rotate_end);
rotate = '\\begin{rotate}' @{n=1;}  (rotate_begin|rotate_end|rotate_body)*    rotate_end  :> any when{!n};
ruledtabular_begin = '\\begin{ruledtabular}' @{n++; };
ruledtabular_end  = '\\end{ruledtabular}' @{n--; };
ruledtabular_body = any+ - (ruledtabular_begin|ruledtabular_end);
ruledtabular = '\\begin{ruledtabular}' @{n=1;}  (ruledtabular_begin|ruledtabular_end|ruledtabular_body)*    ruledtabular_end  :> any when{!n};
sc_begin = '\\begin{sc}' @{n++; };
sc_end  = '\\end{sc}' @{n--; };
sc_body = any+ - (sc_begin|sc_end);
sc = '\\begin{sc}' @{n=1;}  (sc_begin|sc_end|sc_body)*    sc_end  :> any when{!n};
scope_begin = '\\begin{scope}' @{n++; };
scope_end  = '\\end{scope}' @{n--; };
scope_body = any+ - (scope_begin|scope_end);
scope = '\\begin{scope}' @{n=1;}  (scope_begin|scope_end|scope_body)*    scope_end  :> any when{!n};
scriptsize_begin = '\\begin{scriptsize}' @{n++; };
scriptsize_end  = '\\end{scriptsize}' @{n--; };
scriptsize_body = any+ - (scriptsize_begin|scriptsize_end);
scriptsize = '\\begin{scriptsize}' @{n=1;}  (scriptsize_begin|scriptsize_end|scriptsize_body)*    scriptsize_end  :> any when{!n};
section_begin = '\\begin{section}' @{n++; };
section_end  = '\\end{section}' @{n--; };
section_body = any+ - (section_begin|section_end);
section_2 = '\\begin{section}' @{n=1;}  (section_begin|section_end|section_body)*    section_end  :> any when{!n};
sideways_begin = '\\begin{sideways}' @{n++; };
sideways_end  = '\\end{sideways}' @{n--; };
sideways_body = any+ - (sideways_begin|sideways_end);
sideways = '\\begin{sideways}' @{n=1;}  (sideways_begin|sideways_end|sideways_body)*    sideways_end  :> any when{!n};
sidewaystable_begin = '\\begin{sidewaystable}' @{n++; };
sidewaystable_end  = '\\end{sidewaystable}' @{n--; };
sidewaystable_body = any+ - (sidewaystable_begin|sidewaystable_end);
sidewaystable = '\\begin{sidewaystable}' @{n=1;}  (sidewaystable_begin|sidewaystable_end|sidewaystable_body)*    sidewaystable_end  :> any when{!n};
sloppypar_begin = '\\begin{sloppypar}' @{n++; };
sloppypar_end  = '\\end{sloppypar}' @{n--; };
sloppypar_body = any+ - (sloppypar_begin|sloppypar_end);
sloppypar = '\\begin{sloppypar}' @{n=1;}  (sloppypar_begin|sloppypar_end|sloppypar_body)*    sloppypar_end  :> any when{!n};
small_begin = '\\begin{small}' @{n++; };
small_end  = '\\end{small}' @{n--; };
small_body = any+ - (small_begin|small_end);
small = '\\begin{small}' @{n=1;}  (small_begin|small_end|small_body)*    small_end  :> any when{!n};
smallmatrix_begin = '\\begin{smallmatrix}' @{n++; };
smallmatrix_end  = '\\end{smallmatrix}' @{n--; };
smallmatrix_body = any+ - (smallmatrix_begin|smallmatrix_end);
smallmatrix = '\\begin{smallmatrix}' @{n=1;}  (smallmatrix_begin|smallmatrix_end|smallmatrix_body)*    smallmatrix_end  :> any when{!n};
spacing_begin = '\\begin{spacing}' @{n++; };
spacing_end  = '\\end{spacing}' @{n--; };
spacing_body = any+ - (spacing_begin|spacing_end);
spacing = '\\begin{spacing}' @{n=1;}  (spacing_begin|spacing_end|spacing_body)*    spacing_end  :> any when{!n};
split_begin = '\\begin{split}' @{n++; };
split_end  = '\\end{split}' @{n--; };
split_body = any+ - (split_begin|split_end);
split = '\\begin{split}' @{n=1;}  (split_begin|split_end|split_body)*    split_end  :> any when{!n};
subarray_begin = '\\begin{subarray}' @{n++; };
subarray_end  = '\\end{subarray}' @{n--; };
subarray_body = any+ - (subarray_begin|subarray_end);
subarray = '\\begin{subarray}' @{n=1;}  (subarray_begin|subarray_end|subarray_body)*    subarray_end  :> any when{!n};
subeqnarray_begin = '\\begin{subeqnarray}' @{n++; };
subeqnarray_end  = '\\end{subeqnarray}' @{n--; };
subeqnarray_body = any+ - (subeqnarray_begin|subeqnarray_end);
subeqnarray = '\\begin{subeqnarray}' @{n=1;}  (subeqnarray_begin|subeqnarray_end|subeqnarray_body)*    subeqnarray_end  :> any when{!n};
subequations_begin = '\\begin{subequations}' @{n++; };
subequations_end  = '\\end{subequations}' @{n--; };
subequations_body = any+ - (subequations_begin|subequations_end);
subequations = '\\begin{subequations}' @{n=1;}  (subequations_begin|subequations_end|subequations_body)*    subequations_end  :> any when{!n};
subfigure_begin = '\\begin{subfigure}' @{n++; };
subfigure_end  = '\\end{subfigure}' @{n--; };
subfigure_body = any+ - (subfigure_begin|subfigure_end);
subfigure = '\\begin{subfigure}' @{n=1;}  (subfigure_begin|subfigure_end|subfigure_body)*    subfigure_end  :> any when{!n};
subsection_begin = '\\begin{subsection}' @{n++; };
subsection_end  = '\\end{subsection}' @{n--; };
subsection_body = any+ - (subsection_begin|subsection_end);
subsection_2 = '\\begin{subsection}' @{n=1;}  (subsection_begin|subsection_end|subsection_body)*    subsection_end  :> any when{!n};
subtable_begin = '\\begin{subtable}' @{n++; };
subtable_end  = '\\end{subtable}' @{n--; };
subtable_body = any+ - (subtable_begin|subtable_end);
subtable = '\\begin{subtable}' @{n=1;}  (subtable_begin|subtable_end|subtable_body)*    subtable_end  :> any when{!n};
tabbing_begin = '\\begin{tabbing}' @{n++; };
tabbing_end  = '\\end{tabbing}' @{n--; };
tabbing_body = any+ - (tabbing_begin|tabbing_end);
tabbing = '\\begin{tabbing}' @{n=1;}  (tabbing_begin|tabbing_end|tabbing_body)*    tabbing_end  :> any when{!n};
table_begin = '\\begin{table}' @{n++; };
table_end  = '\\end{table}' @{n--; };
table_body = any+ - (table_begin|table_end);
table = '\\begin{table}' @{n=1;}  (table_begin|table_end|table_body)*    table_end  :> any when{!n};
tablenotes_begin = '\\begin{tablenotes}' @{n++; };
tablenotes_end  = '\\end{tablenotes}' @{n--; };
tablenotes_body = any+ - (tablenotes_begin|tablenotes_end);
tablenotes = '\\begin{tablenotes}' @{n=1;}  (tablenotes_begin|tablenotes_end|tablenotes_body)*    tablenotes_end  :> any when{!n};
tabular_begin = '\\begin{tabular}' @{n++; };
tabular_end  = '\\end{tabular}' @{n--; };
tabular_body = any+ - (tabular_begin|tabular_end);
tabular = '\\begin{tabular}' @{n=1;}  (tabular_begin|tabular_end|tabular_body)*    tabular_end  :> any when{!n};
tabularx_begin = '\\begin{tabularx}' @{n++; };
tabularx_end  = '\\end{tabularx}' @{n--; };
tabularx_body = any+ - (tabularx_begin|tabularx_end);
tabularx = '\\begin{tabularx}' @{n=1;}  (tabularx_begin|tabularx_end|tabularx_body)*    tabularx_end  :> any when{!n};
tcolorbox_begin = '\\begin{tcolorbox}' @{n++; };
tcolorbox_end  = '\\end{tcolorbox}' @{n--; };
tcolorbox_body = any+ - (tcolorbox_begin|tcolorbox_end);
tcolorbox = '\\begin{tcolorbox}' @{n=1;}  (tcolorbox_begin|tcolorbox_end|tcolorbox_body)*    tcolorbox_end  :> any when{!n};
teo_begin = '\\begin{teo}' @{n++; };
teo_end  = '\\end{teo}' @{n--; };
teo_body = any+ - (teo_begin|teo_end);
teo = '\\begin{teo}' @{n=1;}  (teo_begin|teo_end|teo_body)*    teo_end  :> any when{!n};
theacknowledgments_begin = '\\begin{theacknowledgments}' @{n++; };
theacknowledgments_end  = '\\end{theacknowledgments}' @{n--; };
theacknowledgments_body = any+ - (theacknowledgments_begin|theacknowledgments_end);
theacknowledgments = '\\begin{theacknowledgments}' @{n=1;}  (theacknowledgments_begin|theacknowledgments_end|theacknowledgments_body)*    theacknowledgments_end  :> any when{!n};
thebibliography_begin = '\\begin{thebibliography}' @{n++; };
thebibliography_end  = '\\end{thebibliography}' @{n--; };
thebibliography_body = any+ - (thebibliography_begin|thebibliography_end);
thebibliography = '\\begin{thebibliography}' @{n=1;}  (thebibliography_begin|thebibliography_end|thebibliography_body)*    thebibliography_end  :> any when{!n};



theo_begin = '\\begin{theo}' @{n++; };
theo_end  = '\\end{theo}' @{n--; };
theo_body = any+ - (theo_begin|theo_end);
theo = '\\begin{theo}' @{n=1;}  (theo_begin|theo_end|theo_body)*    theo_end  :> any when{!n};
theorem_begin = '\\begin{theorem}' @{n++; };
theorem_end  = '\\end{theorem}' @{n--; };
theorem_body = any+ - (theorem_begin|theorem_end);
theorem = '\\begin{theorem}' @{n=1;}  (theorem_begin|theorem_end|theorem_body)*    theorem_end  :> any when{!n};
thm_begin = '\\begin{thm}' @{n++; };
thm_end  = '\\end{thm}' @{n--; };
thm_body = any+ - (thm_begin|thm_end);
thm = '\\begin{thm}' @{n=1;}  (thm_begin|thm_end|thm_body)*    thm_end  :> any when{!n};
threeparttable_begin = '\\begin{threeparttable}' @{n++; };
threeparttable_end  = '\\end{threeparttable}' @{n--; };
threeparttable_body = any+ - (threeparttable_begin|threeparttable_end);
threeparttable = '\\begin{threeparttable}' @{n=1;}  (threeparttable_begin|threeparttable_end|threeparttable_body)*    threeparttable_end  :> any when{!n};
tikzcd_begin = '\\begin{tikzcd}' @{n++; };
tikzcd_end  = '\\end{tikzcd}' @{n--; };
tikzcd_body = any+ - (tikzcd_begin|tikzcd_end);
tikzcd = '\\begin{tikzcd}' @{n=1;}  (tikzcd_begin|tikzcd_end|tikzcd_body)*    tikzcd_end  :> any when{!n};
tikzpicture_begin = '\\begin{tikzpicture}' @{n++; };
tikzpicture_end  = '\\end{tikzpicture}' @{n--; };
tikzpicture_body = any+ - (tikzpicture_begin|tikzpicture_end);
tikzpicture = '\\begin{tikzpicture}' @{n=1;}  (tikzpicture_begin|tikzpicture_end|tikzpicture_body)*    tikzpicture_end  :> any when{!n};
tiny_begin = '\\begin{tiny}' @{n++; };
tiny_end  = '\\end{tiny}' @{n--; };
tiny_body = any+ - (tiny_begin|tiny_end);
tiny = '\\begin{tiny}' @{n=1;}  (tiny_begin|tiny_end|tiny_body)*    tiny_end  :> any when{!n};
titlepage_begin = '\\begin{titlepage}' @{n++; };
titlepage_end  = '\\end{titlepage}' @{n--; };
titlepage_body = any+ - (titlepage_begin|titlepage_end);
titlepage = '\\begin{titlepage}' @{n=1;}  (titlepage_begin|titlepage_end|titlepage_body)*    titlepage_end  :> any when{!n};
trivlist_begin = '\\begin{trivlist}' @{n++; };
trivlist_end  = '\\end{trivlist}' @{n--; };
trivlist_body = any+ - (trivlist_begin|trivlist_end);
trivlist = '\\begin{trivlist}' @{n=1;}  (trivlist_begin|trivlist_end|trivlist_body)*    trivlist_end  :> any when{!n};
turn_begin = '\\begin{turn}' @{n++; };
turn_end  = '\\end{turn}' @{n--; };
turn_body = any+ - (turn_begin|turn_end);
turn = '\\begin{turn}' @{n=1;}  (turn_begin|turn_end|turn_body)*    turn_end  :> any when{!n};
turnpage_begin = '\\begin{turnpage}' @{n++; };
turnpage_end  = '\\end{turnpage}' @{n--; };
turnpage_body = any+ - (turnpage_begin|turnpage_end);
turnpage = '\\begin{turnpage}' @{n=1;}  (turnpage_begin|turnpage_end|turnpage_body)*    turnpage_end  :> any when{!n};
verbatim_begin = '\\begin{verbatim}' @{n++; };
verbatim_end  = '\\end{verbatim}' @{n--; };
verbatim_body = any+ - (verbatim_begin|verbatim_end);
verbatim = '\\begin{verbatim}' @{n=1;}  (verbatim_begin|verbatim_end|verbatim_body)*    verbatim_end  :> any when{!n};
vmatrix_begin = '\\begin{vmatrix}' @{n++; };
vmatrix_end  = '\\end{vmatrix}' @{n--; };
vmatrix_body = any+ - (vmatrix_begin|vmatrix_end);
vmatrix = '\\begin{vmatrix}' @{n=1;}  (vmatrix_begin|vmatrix_end|vmatrix_body)*    vmatrix_end  :> any when{!n};
widetext_begin = '\\begin{widetext}' @{n++; };
widetext_end  = '\\end{widetext}' @{n--; };
widetext_body = any+ - (widetext_begin|widetext_end);
widetext = '\\begin{widetext}' @{n=1;}  (widetext_begin|widetext_end|widetext_body)*    widetext_end  :> any when{!n};
wrapfigure_begin = '\\begin{wrapfigure}' @{n++; };
wrapfigure_end  = '\\end{wrapfigure}' @{n--; };
wrapfigure_body = any+ - (wrapfigure_begin|wrapfigure_end);
wrapfigure = '\\begin{wrapfigure}' @{n=1;}  (wrapfigure_begin|wrapfigure_end|wrapfigure_body)*    wrapfigure_end  :> any when{!n};
xy_begin = '\\begin{xy}' @{n++; };
xy_end  = '\\end{xy}' @{n--; };
xy_body = any+ - (xy_begin|xy_end);
xy = '\\begin{xy}' @{n=1;}  (xy_begin|xy_end|xy_body)*    xy_end  :> any when{!n};

gem_code_begin = '```' @{n++; };
gem_code_end  = '```' @{n--; };
gem_code_body = any+ - (gem_code_begin|gem_code_end);
gem_code = '```' @{n=0;}  (gem_code_begin|gem_code_end|gem_code_body)*    gem_code_end  :> any when{!n};


gem_fname_begin = '**' @{n++; };
gem_fname_end  = '**' @{n--; };
gem_fname_body = any+ - (gem_fname_begin|gem_fname_end);
gem_fname = '**' @{n=0;}  (gem_fname_begin|gem_fname_end|gem_fname_body)*    gem_fname_end  :> any when{!n};


left_brace = '{' @{n++; };
right_brace = '}' @{n--; };
brace_body = any - (left_brace|right_brace);
braces = '{' @{n=0;} (left_brace|right_brace|brace_body)* :> '}' when{!n};

left_bracket = '[' @{n++;};
right_bracket = ']' @{n--; };
bracket_body = any - (left_bracket|right_bracket);
brackets = ('\\left['|'[') @{n=0;} (left_bracket|right_bracket|bracket_body)* :> ']' when{!n};

left_parens = '(' @{n++;};
right_parens = ')' @{n--; };
parens_body = any - (left_parens|right_parens);
parens = ('\\left('|'(') @{n=0;} (left_parens|right_parens|parens_body)* :> ')' when{!n};

left_comma = '(' @{n++;};
right_comma = ')' @{n--; };
comma_body = any - (left_comma|right_comma);
commas = '(' @{n=0;} (left_comma|right_comma|comma_body)* :> ')' when{!n};
cite = '\\cite' (braces|brackets braces| braces braces) ;
ref = '\\ref' braces;
bibitem_start = '\\bibitem' ;
bibitem_body = any+ - bibitem_start;

bibitem = bibitem_start braces (bibitem_body)*:> '\n' ;
url = '\\url' braces | '\\href' braces;
affiliation = '\\affiliation' braces; 
usepackage = '\\usepackage' ( braces | brackets braces ); 
author = '\\author' braces;
section = '\\section' braces;
label = '\\label' braces| 'label' braces;
emph = '\\emph' braces;
bibinfo = '\\bibinfo' (braces|brackets braces);
title = '\\title' braces;
subsection = '\\subsection' braces;
newcommand = '\\newcommand' (braces braces | braces brackets brackets braces);
frac = ('\\frac'|'\\tfrac'|'\\dfrac') .  (braces braces | braces '\n' [ ]+ braces | digit braces | braces digit | [ ]? digit digit);
inline_math =  "$" (any-"$"){1,80} "$" ;
underscore = '_';
caret = '^';

sum_underscore ='\\sum' underscore (braces caret braces| alpha caret braces | alpha | '0' | '1' | ' '| '\\' );

sum_caret = '\\sum' caret (braces |'\\infty'|'n'|'N'|'\\'|'m'|'T'|'K'|'3'|'M'|'k'|'d'|'2'|'L'|'4'|'t'|'p'|'r'|'J'|'*'|'s'|'l');

sum_limits = '\\sum\\limits' (underscore braces caret (braces|alpha) | caret (braces |alpha) underscore braces);
sum = sum_limits | sum_caret|sum_underscore;


prod_underscore ='\\prod' underscore (braces caret braces| alpha caret braces | alpha | '0' | '1' | ' '| '\\' );

prod_caret = '\\prod' caret (braces |'\\infty'|'n'|'N'|'\\'|'m'|'T'|'K'|'3'|'M'|'k'|'d'|'2'|'L'|'4'|'t'|'p'|'r'|'J'|'*'|'s'|'l');

prod_limits = '\\prod\\limits' (underscore braces caret (braces|alpha) | caret (braces |alpha) underscore braces);
prod = prod_limits | prod_caret|prod_underscore;


lim_underscore ='\\lim' underscore (braces caret braces| alpha caret braces | alpha | '0' | '1' | ' '| '\\' |braces);

lim_caret = '\\lim' caret (braces |'\\infty'|'n'|'N'|'\\'|'m'|'T'|'K'|'3'|'M'|'k'|'d'|'2'|'L'|'4'|'t'|'p'|'r'|'J'|'*'|'s'|'l');

lim_limits = '\\lim\\limits' (underscore braces caret (braces|alpha) | caret (braces |alpha) underscore braces);
lim = lim_limits | lim_caret|lim_underscore;


int_underscore = '\\int' underscore (alpha caret braces | digit caret braces|digit caret alpha|braces caret braces);

int_space = '\\int' [ ]+;
int = (int_underscore | int_space ) (([ ]+ 'd') alpha [ ])?;


URL='\\'('anchor'|'anchorfoot'|'anchorparen'|'arxiv'|'arxivprefix'|'bibitem'|'biburl'|'blueurl'|'burl'|'cite'|'citealt'|'citep'|'citet'|'code'|'doi'|'doilink'|'doiurl'|'emph'|'eprint'|'footnote'|'footnotetext'|'furl'|'gitbook'|'githubicon'|'gitlab'|'homepage'|'href'|'hrefgrad'|'hreflink'|'hyperlink'|'hyperref'|'isalink'|'it'|'myhref'|'myurl'|'neturl'|'newurl'|'niceurl'|'nolinkurl'|'orcidlink'|'ref'|'regexp'|'rm'|'setfloatlink'|'small'|'sphinxhref'|'str'|'swurl'|'textbf'|'textit'|'textsl'|'texttt'|'tiny'|'tt'|'underline'|'urladdr'|'urlalt'|'urlfont'|'urlwofont'|'urlx'|'usenixhref')[  ]* '{' ('http'|'https') '://' (any-'}')* '}' ;

symbols = '\\alpha'|'\\approx'|'\\ast'|'\\beta'|'\\cal'|'\\cdot'|'\\cdots'|'\\chi'|'\\cos'|'\\d'|'\\dag'|'\\dagger'|'\\delta'|'\\Delta'|'\\dot'|'\\dots'|'\\epsilon'|'\\equiv'|'\\eta'|'\\exp'|'\\frac'|'\\gamma'|'\\Gamma'|'\\in'|'\\infty'|'\\int'|'\\it'|'\\kappa'|'\\lambda'|'\\Lambda'|'\\langle'|'\\ldots'|'\\leq'|'\\limits'|'\\ln'|'\\log'|'\\mathbf'|'\\mathcal'|'\\mathrm'|'\\mu'|'\\nabla'|'\\nu'|'\\omega'|'\\Omega'|'\\over'|'\\overline'|'\\partial'|'\\phi'|'\\Phi'|'\\pi'|'\\Pi'|'\\pm'|'\\prime'|'\\psi'|'\\Psi'|'\\rangle'|'\\ref'|'\\rho'|'\\rm'|'\\rvec'|'\\sigma'|'\\Sigma'|'\\sim'|'\\sin'|'\\star'|'\\sum'|'\\tau'|'\\text'|'\\theta'|'\\tilde'|'\\times'|'\\to'|'\\varepsilon'|'\\varphi'|'\\vec'|'\\wedge'|'\\widetilde'|'\\xi'|'\\ze'|'\\zeta';
integer = '0'|[1-9][0-9]*;
hat = '\\hat' (braces parens|braces brackets|braces underscore braces brackets|braces);
vec = '\\vec' (braces parens|braces brackets|braces);
sqrt = '\\sqrt' braces;
hspace = '\\hspace' braces;
e = 'e' caret braces; 
eta = '\\eta' underscore braces;


subexpr = (parens | '\\alpha'| '\\argmax'| '\\argmin'| '\\ast'| '\\bbeta'| '\\beta'| '\\bfx'| '\\bigcap'| '\\bigcup'| '\\bigoplus'| '\\bigotimes'| '\\bigwedge'| '\\bSigma'| '\\btheta'| '\\chi'| '\\circ'| '\\cup'| '\\dag'| '\\dagger'| '\\dashint'| '\\del'| '\\delta'| '\\Delta'| '\\dim'| '\\dsum'| '\\ell'| '\\epsilon'| '\\eta'| '\\exp'| '\\gamma'| '\\Gamma'| '\\grad'| '\\iint'| '\\infty'| '\\iota'| '\\kappa'| '\\lambda' '\\Lambda'| '\\liminf'| '\\limits'| '\\limsup'| '\\log'| '\\max'| '\\min'| '\\mu'| '\\nabla'| '\\nolimits'| '\\nu'| '\\oint'| '\\omega'| '\\Omega'| '\\oplus'| '\\oslash'| '\\otimes'| '\\partial'| '\\perp'| '\\phi'| '\\Phi'| '\\pi'| '\\Pi'| '\\prime'| '\\prod'| '\\psi'| '\\Psi'| '\\rangle'| '\\rho'| '\\rvert'| '\\rVert'| '\\sigma'| '\\Sigma'| '\\star'| '\\state'| '\\sup'| '\\tau'| '\\theta'| '\\Theta'| '\\times'| '\\upsilon'| '\\Upsilon'| '\\varepsilon'| '\\varphi'| '\\varpi'| '\\varrho'| '\\varsigma'| '\\vartheta'| '\\vert'| '\\Vert'| '\\vol'| '\\xi'| '\\Xi'| '\\zeta') underscore (braces | alnum |'!'|'*'|'+'|'-');


word='\\'alpha{1,15};
context = word (any{0,40}-word);
}%%
